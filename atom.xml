<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Loco&#39;s Dev Blog</title>
  
  <subtitle>Frontend Developer</subtitle>
  <link href="https://loco9939.github.io/atom.xml" rel="self"/>
  
  <link href="https://loco9939.github.io/"/>
  <updated>2023-03-31T15:29:44.770Z</updated>
  <id>https://loco9939.github.io/</id>
  
  <author>
    <name>loco9939</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>onClick 이벤트 전파</title>
    <link href="https://loco9939.github.io/2023/04/01/Daily/onClick-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8C/"/>
    <id>https://loco9939.github.io/2023/04/01/Daily/onClick-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8C/</id>
    <published>2023-03-31T15:17:08.000Z</published>
    <updated>2023-03-31T15:29:44.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="onClick-이벤트-전파"><a href="#onClick-이벤트-전파" class="headerlink" title="onClick 이벤트 전파"></a>onClick 이벤트 전파</h1><p>React에서 onClick 이벤트 핸들러를 등록하여 클릭 이벤트가 발생하면 <strong>이벤트가 발생한 요소 뿐만 아니라 부모 요소까지 이벤트가 전파된다.</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> console.log(&quot;container clicked.&quot;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;parent&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> console.log(&quot;parent clicked.&quot;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;child&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            console.log(&quot;child clicked.&quot;);</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          버튼</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">child clicked</span><br><span class="line">parent clicked</span><br><span class="line">container clicked</span><br></pre></td></tr></table></figure><ul><li>child를 클릭하면 console 창에 다음과 같이 출력된다.</li><li>이벤트가 발생한 요소부터 이벤트 핸들러가 호출되고 부모 방향으로 이벤트가 전파된다.</li></ul><p>간혹 부모 요소에서 이벤트가 발생하기를 원하지 않을 경우 이러한 이벤트 전파를 막아야한다.</p><p>그 방법으로는 <code>event.stopPropagation()</code>이다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> console.log(&quot;container clicked.&quot;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;parent&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> console.log(&quot;parent clicked.&quot;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;child&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            e.stopPropagation();</span></span><br><span class="line"><span class="language-xml">            console.log(&quot;child clicked.&quot;);</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          버튼</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">child clicked.</span><br></pre></td></tr></table></figure><ul><li>이벤트 전파가 발생하지 않고 이벤트가 발생한 요소만 이벤트 핸들러가 호출된다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;onClick-이벤트-전파&quot;&gt;&lt;a href=&quot;#onClick-이벤트-전파&quot; class=&quot;headerlink&quot; title=&quot;onClick 이벤트 전파&quot;&gt;&lt;/a&gt;onClick 이벤트 전파&lt;/h1&gt;&lt;p&gt;React에서 onClick 이벤트 핸들</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="이벤트 전파" scheme="https://loco9939.github.io/tags/%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8C/"/>
    
    <category term="stopPropagation" scheme="https://loco9939.github.io/tags/stopPropagation/"/>
    
  </entry>
  
  <entry>
    <title>확장성 있는 컴포넌트 만들기 with TypeScript</title>
    <link href="https://loco9939.github.io/2023/03/29/React/%ED%99%95%EC%9E%A5%EC%84%B1-%EC%9E%88%EB%8A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-with-TypeScript/"/>
    <id>https://loco9939.github.io/2023/03/29/React/%ED%99%95%EC%9E%A5%EC%84%B1-%EC%9E%88%EB%8A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-with-TypeScript/</id>
    <published>2023-03-29T14:31:52.000Z</published>
    <updated>2023-03-29T15:05:25.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="확장성-있는-Text-컴포넌트"><a href="#확장성-있는-Text-컴포넌트" class="headerlink" title="확장성 있는 Text 컴포넌트"></a>확장성 있는 Text 컴포넌트</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Text</span> typography=<span class="string">&quot;h1&quot;</span>&gt;나는 머릿말 <span class="number">1</span>이야&lt;/<span class="title class_">Text</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">typography</span>=<span class="string">&quot;content&quot;</span>&gt;</span>나는 콘텐츠야<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>위와 같은 컴포넌트를 만들기 위한 작업을 시작해보자.</p><p>컴포넌트 재사용을 높이기 위해서는 누구나 이해하기 쉽게 작성하는 것이 좋다. 그러기 위해서는 선언형 코드인 HTML 방식을 따르는 것이 이득이다.</p><h2 id="HTML-처럼-만든-컴포넌트"><a href="#HTML-처럼-만든-컴포넌트" class="headerlink" title="HTML 처럼 만든 컴포넌트"></a>HTML 처럼 만든 컴포넌트</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Props</span> = <span class="title class_">HTMLAttributes</span>&lt;<span class="string">&quot;span&quot;</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Text</span> = (<span class="params">props: Props</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>이런식으로만 사용해도 HTML Element를 똑같이 따라할 수 있다.</p><p>하지만 HTML 속성은 <span style="color:red">ref, key 같은 리액트 속성들을 없다.</span></p><p>이 때 사용하는 것이 forwardRef 함수로 ref 값은 전달해준다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Text</span> = <span class="title function_">forwardRef</span>(<span class="keyword">function</span> <span class="title function_">Text</span>(<span class="params"></span></span><br><span class="line"><span class="params">  props: ComponentPropsWithoutRef&lt;<span class="string">&quot;span&quot;</span>&gt;,</span></span><br><span class="line"><span class="params">  ref: Ref&lt;HTMLSpanElement&gt;</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">ref</span>=<span class="string">&#123;ref&#125;</span>&gt;</span>&#123;props.children&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>ComponentPropsWithoutRef&lt;&quot;span&quot;&gt;</code>은 ref만 제외한 나머지 리액트 프로퍼티를 모두 포함한다.</li></ul><h2 id="커스텀-프로퍼티-추가하기"><a href="#커스텀-프로퍼티-추가하기" class="headerlink" title="커스텀 프로퍼티 추가하기"></a>커스텀 프로퍼티 추가하기</h2><p>지금까지의 컴포넌트는 그저 span element와 동일하다. 다른 커스텀 프로퍼티도 받을 수 있도록 타입스크립트의 &amp; (intersection)을 사용하여 타입을 확장해보자.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span> = &#123;</span><br><span class="line">  typography?: <span class="built_in">string</span>;</span><br><span class="line">&#125; &amp; <span class="title class_">ComponentPropsWithoutRef</span>&lt;<span class="string">&quot;span&quot;</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Text</span> = <span class="title function_">forwardRef</span>(<span class="keyword">function</span> <span class="title function_">Text</span>(<span class="params"></span></span><br><span class="line"><span class="params">  &#123; typography, ...props &#125;: Props,</span></span><br><span class="line"><span class="params">  ref: Ref&lt;HTMLSpanElement&gt;</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>하지만, <code>ComponentPropsWithoutRef&lt;&quot;span&quot;&gt;</code>가 이미 갖고 있는 프로퍼티와 커스텀 프로퍼티가 동일한 경우 대응하기 어렵다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span> = &#123;</span><br><span class="line">  customId?: <span class="built_in">number</span>;</span><br><span class="line">&#125; &amp; <span class="title class_">ComponentPropsWithoutRef</span>&lt;<span class="string">&quot;span&quot;</span>&gt;;</span><br></pre></td></tr></table></figure><p>예를 들어 위와 같은 커스텀 프로퍼티는 <code>ComponentPropsWithoutRef&lt;&quot;span&quot;&gt;</code>와 동일한 프로퍼티가 없기 때문에 제대로 타입이 추론된다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span> = &#123;</span><br><span class="line">  id?: <span class="built_in">number</span>;</span><br><span class="line">&#125; &amp; <span class="title class_">ComponentPropsWithoutRef</span>&lt;<span class="string">&quot;span&quot;</span>&gt;;</span><br></pre></td></tr></table></figure><p>하지만 id 프로퍼티는 <code>ComponentPropsWithoutRef&lt;&quot;span&quot;&gt;</code>가 소유하고 있어 동일한 프로퍼티 2개가 생기게 되므로 타입스크립트가 제대로 추론하지 못하고 <code>undefined</code>로 추론된다.</p><p>이를 해결하기 위해서는 <strong>Omit 타입을 사용하여 오버라이딩하려는 프로퍼티를 먼저 제거한 후 병합해야지만 문제가 없다.</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Combine</span>&lt;T, K&gt; = T &amp; <span class="title class_">Omit</span>&lt;K, keyof T&gt;;</span><br></pre></td></tr></table></figure><ul><li>Combine 유틸타입은 2개의 타입을 받은 후 K타입에서 T 타입이 가진 프로퍼티와 중복되는 프로퍼티를 제거한 후 &amp; (intersection)으로 병합한다.</li></ul><blockquote><p>이런식으로 타입을 병합하려면 상당히 귀찮기 때문에 유틸 타입을 하나 만들어둔다.</p></blockquote><h2 id="원하는-요소로-렌더링-하기"><a href="#원하는-요소로-렌더링-하기" class="headerlink" title="원하는 요소로 렌더링 하기"></a>원하는 요소로 렌더링 하기</h2><p>지금까지는 span 요소로만 작동하기 때문에 확장성을 위해 <code>ComponentPropsWithoutRef&lt;&quot;span&quot;&gt;</code> 에서 span 위치에 변수를 할당하도록 구현한다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Text 컴포넌트의 커스텀 프로퍼티 선언</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextBaseProps</span>&lt;T&gt; = &#123;</span><br><span class="line">  typography?: <span class="built_in">string</span>;</span><br><span class="line">  <span class="keyword">as</span>?: T;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Props&lt;T&gt;는 ComponentPropsWithoutRef&lt;T&gt;에 이 값을 그대로 넘겨준다.</span></span><br><span class="line"><span class="comment">// 그리고 커스텀 프로퍼티 내부의 as에도 T 타입을 바인딩해준다.</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span>&lt;T&gt; = <span class="title class_">Combine</span>&lt;<span class="title class_">TextBaseProps</span>&lt;T&gt;, <span class="title class_">ComponentPropsWithoutRef</span>&lt;T&gt;&gt;;</span><br></pre></td></tr></table></figure><p>하지만, 이는 오류를 발생시킨다. <code>ComponentPropsWithoutRef</code>가 받을 수 있는 제네릭 타입이 <code>ElementType</code>으로 정해져 있기 때문이다.</p><p>그래서 <code>type T</code>는 <code>ElementType</code>을 상속한 타입이여야 한다고 명시해야한다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">TextBaseProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>&gt; = &#123;</span><br><span class="line">  typography?: <span class="built_in">string</span>;</span><br><span class="line">  <span class="keyword">as</span>?: T;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>&gt; = <span class="title class_">Combine</span>&lt;</span><br><span class="line">  <span class="title class_">TextBaseProps</span>&lt;T&gt;,</span><br><span class="line">  <span class="title class_">ComponentPropsWithoutRef</span>&lt;T&gt;</span><br><span class="line">&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title class_">Text</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>&gt;(<span class="attr">props</span>: <span class="title class_">TextProps</span>&lt;T&gt;) &#123;&#125;</span><br></pre></td></tr></table></figure><p>이제 모든 <code>type T</code>가 동일하다는 것을 보장할 수 있다.</p><ol><li><code>Text&lt;T&gt;</code>의 타입 변수 T</li><li><code>TextProps&lt;T&gt;</code>의 타입 변수 T</li><li><code>TextBaseProps&lt;T&gt;</code>의 타입 변수 T</li><li>as 프로퍼티에 바인딩 된 타입 변수 T</li><li><code>ComponentPropsWithoutRef&lt;T&gt;</code>의 타입 변수 T</li></ol><p><strong>즉, 이 중 한곳이라도 T에 대해서 명확하게 알 수 있다면 나머지 부분에서도 자연스럽게 추론이 가능하다.</strong></p><h2 id="as-프로퍼티로-타이핑-추상화-하기"><a href="#as-프로퍼티로-타이핑-추상화-하기" class="headerlink" title="as 프로퍼티로 타이핑 추상화 하기"></a>as 프로퍼티로 타이핑 추상화 하기</h2><p><code>as</code>라는 프로퍼티는 Text 컴포넌트 뿐만 아니라 다양한 컴포넌트에서도 사용될 수 있기에 이 부분을 최대한 추상화 해둘 필요가 있다.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 텍스트 컴포넌트의 프로퍼티</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextBaseProps</span> = &#123;</span><br><span class="line">  typography?: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// T 타입을 추론할 수 있는 as 프로퍼티를 자동으로 포함하고</span></span><br><span class="line"><span class="comment">// T 타입으로 HTML 엘리먼트 속성까지 타이핑 해주는 OverridableProps!</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>&gt; = <span class="title class_">OverridableProps</span>&lt;T, <span class="title class_">TextBaseProps</span>&gt;;</span><br></pre></td></tr></table></figure><ul><li><code>OverridableProps</code> 타입은 특정 컴포넌트가 <code>as</code> 프로퍼티를 사용하여 HTML 요소 이름을 받고 내부적으로 해당 요소의 속성 타입을 찾아 바인딩해주는 함수이다.</li></ul><blockquote><p>이렇게 필요한 부분을 추상화해두면 필자가 아닌 다른 개발자는 <code>ComponentPropsWithoutRef</code>을 사용해야한다던가 <code>Combine</code> 타입을 사용할 때 타입 변수 <code>T</code>를 <code>ElementType</code>으로 제한해야한다던가 하는 귀찮은 부분을 생각하지 않고도 <code>as</code> 프로퍼티를 쉽고 빠르게 추가할 수 있을 것이다.</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전체 코드</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">Combine</span>&lt;T, K&gt; = T &amp; <span class="title class_">Omit</span>&lt;K, keyof T&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">CombineElementProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>, K = <span class="built_in">unknown</span>&gt; = <span class="title class_">Combine</span>&lt;</span><br><span class="line">  K,</span><br><span class="line">  <span class="title class_">ComponentPropsWithoutRef</span>&lt;T&gt;</span><br><span class="line">&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">OverridableProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>, K = <span class="built_in">unknown</span>&gt; = &#123;</span><br><span class="line">  <span class="keyword">as</span>?: T;</span><br><span class="line">&#125; &amp; <span class="title class_">CombineElementProps</span>&lt;T, K&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextBaseProps</span> = &#123;</span><br><span class="line">  typography?: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TextProps</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span>&gt; = <span class="title class_">OverridableProps</span>&lt;T, <span class="title class_">TextBaseProps</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title class_">Text</span>&lt;T <span class="keyword">extends</span> <span class="title class_">ElementType</span> = <span class="string">&quot;span&quot;</span>&gt;(</span><br><span class="line">  &#123; typography = <span class="string">&quot;content&quot;</span>, <span class="keyword">as</span>, ...props &#125;: <span class="title class_">TextProps</span>&lt;T&gt;,</span><br><span class="line">  <span class="attr">ref</span>: <span class="title class_">Ref</span>&lt;<span class="built_in">any</span>&gt;</span><br><span class="line">) &#123;</span><br><span class="line">  <span class="keyword">const</span> target = <span class="keyword">as</span> ?? <span class="string">&quot;span&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Component</span> = target;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Component</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">ref</span>=<span class="string">&#123;ref&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      // <span class="attr">대충</span> <span class="attr">타이포그래피</span> <span class="attr">클래스</span> <span class="attr">렌더하는</span> <span class="attr">로직</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &#123;<span class="attr">...props</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">forwardRef</span>(<span class="title class_">Text</span>) <span class="keyword">as</span> <span class="keyword">typeof</span> <span class="title class_">Text</span>;</span><br></pre></td></tr></table></figure><h2 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h2><p><a href="https://evan-moon.github.io/2020/11/28/making-your-components-extensible-with-typescript/">Evans Library Blog - “타입스크립트와 함께 컴포넌트 단계별로 추상화하기”</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;확장성-있는-Text-컴포넌트&quot;&gt;&lt;a href=&quot;#확장성-있는-Text-컴포넌트&quot; class=&quot;headerlink&quot; title=&quot;확장성 있는 Text 컴포넌트&quot;&gt;&lt;/a&gt;확장성 있는 Text 컴포넌트&lt;/h1&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
  </entry>
  
  <entry>
    <title>sticky 잘 사용하기</title>
    <link href="https://loco9939.github.io/2023/03/27/Daily/sticky-%EC%9E%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/27/Daily/sticky-%EC%9E%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-27T14:36:52.000Z</published>
    <updated>2023-03-29T14:01:29.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sticky-잘-알고-사용하기"><a href="#sticky-잘-알고-사용하기" class="headerlink" title="sticky 잘 알고 사용하기"></a>sticky 잘 알고 사용하기</h1><p><code>position:sticky</code>는 <code>position:static</code> 처럼 일반적인 흐름을 따르지만, 일정 스크롤을 내렸을 때 해당 임계점에 도달하였을 때, <code>position:fixed</code> 처럼 구현하기 위한 속성이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sticky</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: -webkit-sticky; <span class="comment">/* 사파리 브라우저 지원 */</span></span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>sticky 속성을 설정하면 top, bottom, right, left 속성 중 하나는 반드시 설정해줘야한다.</li></ul><blockquote><p>또한 sticky가 기준으로 하는 임계점은 <code>overflow:auto</code>, <code>overflow:scroll</code> 속성을 가진 가장 가까운 조상 컨테이너 박스이다.</p></blockquote><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;scroll&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">&quot;static&quot;</span>&gt;</span>.static<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">&quot;sticky&quot;</span>&gt;</span>.sticky<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span>.fixed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">&quot;static&quot;</span>&gt;</span>.static<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">&quot;sticky&quot;</span>&gt;</span>.sticky<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scroll</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.static</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">  <span class="attribute">background</span>: gray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>위 코드에서 sticky가 fixed로 고정되는 임계기준점은 scroll 클래스를 가진 div 박스이다.</li><li>scroll 클래스가 있는 박스는 스크롤이 할 수 있을 만큼 길이가 길어서 스크롤 하여 해당 임계점에 도달하는 순간 fixed로 변하게 된다.</li></ul><blockquote><p>처음에 헷갈린 점은 <code>overflow:auto</code> 속성을 parent 클래스를 가진 박스로 옮겼는데 아무런 일도 일어나지 않아서 당황했다. 그 이유는 parent 클래스를 가진 박스 내부가 스크롤이 되었을 때 해당 박스를 기준으로 고정되는 것인데, parent 클래스를 가진 박스는 스크롤이 될만한 높이를 가지고 있지 않아서 아무런 일도 발생하지 않았던 것이다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sticky-잘-알고-사용하기&quot;&gt;&lt;a href=&quot;#sticky-잘-알고-사용하기&quot; class=&quot;headerlink&quot; title=&quot;sticky 잘 알고 사용하기&quot;&gt;&lt;/a&gt;sticky 잘 알고 사용하기&lt;/h1&gt;&lt;p&gt;&lt;code&gt;position</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="sticky" scheme="https://loco9939.github.io/tags/sticky/"/>
    
  </entry>
  
  <entry>
    <title>Vite 배포 후 이미지가 안 불러와진 경우</title>
    <link href="https://loco9939.github.io/2023/03/25/Daily/Vite-%EB%B0%B0%ED%8F%AC-%ED%9B%84-%EC%9D%B4%EB%AF%B8%EC%A7%80%EA%B0%80-%EC%95%88-%EB%B6%88%EB%9F%AC%EC%99%80%EC%A7%84-%EA%B2%BD%EC%9A%B0/"/>
    <id>https://loco9939.github.io/2023/03/25/Daily/Vite-%EB%B0%B0%ED%8F%AC-%ED%9B%84-%EC%9D%B4%EB%AF%B8%EC%A7%80%EA%B0%80-%EC%95%88-%EB%B6%88%EB%9F%AC%EC%99%80%EC%A7%84-%EA%B2%BD%EC%9A%B0/</id>
    <published>2023-03-25T14:40:24.000Z</published>
    <updated>2023-03-27T14:34:56.705Z</updated>
    
    <content type="html"><![CDATA[<p>이번에 프로젝트를 진행하다가 아이콘을 사용하기 위해 svg 파일을 css <code>background:url()</code>로 불러와서 사용한 적이 있다.</p><p>그런데 로컬환경에서는 제대로 불러와지던 svg 파일들이 build를 하고 난 후, 확인해보니 불러와지지 않는 것을 확인하였다.</p><p>그래서 찾아보니 Vite에서는 다음 asset을 가져오기 위해 2가지 방법을 사용한다고 한다.</p><h1 id="Vite에서-assets-가져오기"><a href="#Vite에서-assets-가져오기" class="headerlink" title="Vite에서 assets 가져오기"></a>Vite에서 assets 가져오기</h1><h2 id="1-URL을-통해-가져오기"><a href="#1-URL을-통해-가져오기" class="headerlink" title="1. URL을 통해 가져오기"></a>1. URL을 통해 가져오기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> imgUrl <span class="keyword">from</span> <span class="string">&quot;./img.png&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;hero-img&quot;</span>).<span class="property">src</span> = imgUrl;</span><br></pre></td></tr></table></figure><ul><li>Webpack의 file-loader와 비슷한데, 차이점이 있다면 Vite는 절대경로와 상대 경로 둘 다 사용가능하다.</li><li>일반적인 이미지, 미디어, 폰트 파일 타입은 자동으로 asset 목록에 포함된다.</li></ul><h2 id="2-public-디렉터리에서-가져오기"><a href="#2-public-디렉터리에서-가져오기" class="headerlink" title="2. public 디렉터리에서 가져오기"></a>2. public 디렉터리에서 가져오기</h2><ul><li>robots.txt 같이 소스 코드에서 참조하지 않는 asset</li><li>해싱 없이 항상 같은 이름을 갖는 asset</li><li>URL을 얻기 위해 굳이 import 할 필요가 없는 asset</li></ul><p>위 3가지의 경우에는 public 디렉터리에 asset을 위치시킨다. 이곳에 위치한 asset은 개발 시 <code>/</code> 경로에, 배포시에는 <code>dist</code> 디렉터리에 위치한다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.arrowDown</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/assets/img/Arrow.svg&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>public</code> 디렉터리에 있는 asset을 가져올 경우에는 항상 루트 기준으로 하는 절대경로에서 가져와야한다. <code>(public/Arrow.svg</code> asset은 소스 코드에서는 <code>/Arrow.svg</code>으로 접근 가능하다.)</li><li><code>public</code> 디렉터리에 있는 asset은 JavaScript로 가져올 수 없다.</li></ul><h3 id="가급적-import를-사용하자"><a href="#가급적-import를-사용하자" class="headerlink" title="가급적 import를 사용하자."></a>가급적 import를 사용하자.</h3><p>React Router를 사용하여 중첩 라우팅을 구현하였다.</p><p><code>/mypage/history</code> 라우팅에서 Header 컴포넌트를 불러왔다.</p><p>Header 컴포넌트에는 public 폴더에서 불러온 logo가 있다.</p><p>하지만 이 때의 경로는 <code>/img/logo.svg</code> 였기 때문에 <code>/mypage/history</code> 라우팅에서는 해당 경로의 파일을 찾을 수 없다.</p><p>해당 경로의 파일을 찾기 위해서는 <code>/mypage/history/img/logo.svg</code> 로 경로를 바꿔줘야 한다.</p><p>즉, public 폴더에서 이미지를 가져올 경우, 라우팅이 바뀔 때마다 경로를 생각해줘야한다.</p><p><strong>그러므로 import 구문을 사용하여 src 폴더 안에 이미지를 가져오도록 하자.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;이번에 프로젝트를 진행하다가 아이콘을 사용하기 위해 svg 파일을 css &lt;code&gt;background:url()&lt;/code&gt;로 불러와서 사용한 적이 있다.&lt;/p&gt;
&lt;p&gt;그런데 로컬환경에서는 제대로 불러와지던 svg 파일들이 build를 하고 난</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="vite" scheme="https://loco9939.github.io/tags/vite/"/>
    
  </entry>
  
  <entry>
    <title>Recoil에 들어가기 전...</title>
    <link href="https://loco9939.github.io/2023/03/23/Daily/Recoil%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%A0%84/"/>
    <id>https://loco9939.github.io/2023/03/23/Daily/Recoil%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%A0%84/</id>
    <published>2023-03-23T13:31:34.000Z</published>
    <updated>2023-03-23T13:54:57.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="상태란"><a href="#상태란" class="headerlink" title="상태란?"></a>상태란?</h1><p>상태(state)는 애플리케이션의 작동 방식을 설명하는 모든 데이터를 말한다. 상태 관리는 시간의 흐름에 따라 상태가 변경되는 방식이다.</p><p>상태 관리를 위해서는 다음 기능이 필요하다.</p><ul><li>초기값(initial Value)을 저장할 수 있어야 한다.</li><li>현재 값(Current Value)을 읽을 수 있어야 한다.</li><li>값을 업데이트 할 수 있어야 한다.</li></ul><h2 id="React-상태관리의-한계"><a href="#React-상태관리의-한계" class="headerlink" title="React 상태관리의 한계"></a>React 상태관리의 한계</h2><ol><li><p>컴포넌트 상태는 연관된 상위 컴포넌트까지 끌어올려야 공유가 가능하고 이 과정에서 Props Drilling 이슈가 발생하고 불필요한 리렌더링 발생한다. <span style="color:red">(성능저하)</span></p></li><li><p>Context로 Props Drilling 이슈 해결할 수 있지만, <strong>Context는 단일 값만 저장할 수 있고 여러 값들의 집합을 담기가 어렵다.</strong></p></li><li><p>React의 Context, Props 만으로는 최상단에서 최하단 까지의 state 코드 분리가 어렵다.</p></li></ol><h2 id="Recoil-장점"><a href="#Recoil-장점" class="headerlink" title="Recoil 장점"></a>Recoil 장점</h2><h3 id="유연한-상태-공유"><a href="#유연한-상태-공유" class="headerlink" title="유연한 상태 공유"></a>유연한 상태 공유</h3><p>Redux처럼 복잡한 과정이 없다. 간단한 get&#x2F;set 인터페이스를 사용해 상태 공유가 쉽다.</p><h3 id="파생된-상태"><a href="#파생된-상태" class="headerlink" title="파생된 상태"></a>파생된 상태</h3><p>데이터는 간단하고 또 안전하게 상태나 다른 파생된 데이터로부터 파생될 수 있다. 또한, 상태에 접근하는 방법과 동일하게 파생된 상태에 접근 가능하다.</p><p>파생된 상태는 동기, 비동기 처리가 가능하다.</p><h3 id="광범위한-앱-상태-관찰"><a href="#광범위한-앱-상태-관찰" class="headerlink" title="광범위한 앱 상태 관찰"></a>광범위한 앱 상태 관찰</h3><p>Recoil 상태의 전체 또는 일부의 상태를 읽거나 상태가 변경된 것을 감지할 수 있다. 앱의 상태를 유지할 수도 있고 다시 수화(Hydration)하는 기능을 제공한다.</p><h3 id="비교적-낮은-러닝-커브"><a href="#비교적-낮은-러닝-커브" class="headerlink" title="비교적 낮은 러닝 커브"></a>비교적 낮은 러닝 커브</h3><p>Recoil은 React API와 유사하여 Redux에 비해 쉽고 Recoil은 기본적으로 비동기 처리 기능을 가진다.</p><h2 id="Recoil-핵심-개념"><a href="#Recoil-핵심-개념" class="headerlink" title="Recoil 핵심 개념"></a>Recoil 핵심 개념</h2><h3 id="1-atoms"><a href="#1-atoms" class="headerlink" title="1. atoms"></a>1. atoms</h3><ul><li>atoms은 공유 상태</li><li>컴포넌트가 구독할 수 있는 상태 단위</li></ul><p>atom은 상태단위이며 구독과 업데이트가 가능하다. atom이 업데이트되면 구독중인 컴포넌트는 새 값을 반영해 다시 렌더링된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> authUserState = <span class="title function_">atom</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&quot;authUserState&quot;</span>,</span><br><span class="line">  <span class="attr">defualt</span>: <span class="literal">null</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>atom은 고유한 key를 가져야 한다.</li><li>default 속성으로 초깃값 설정한다.</li></ul><p>컴포넌트에서 atom을 읽거나 쓰려면 useRecoilState 훅을 사용한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SignIn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [authUser] = <span class="title function_">useRecoilState</span>(authUserState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    !authUser ? <span class="language-xml"><span class="tag">&lt;<span class="name">SignInForm</span> /&gt;</span></span> : <span class="language-xml"><span class="tag">&lt;<span class="name">Browse</span> /&gt;</span></span>;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>뿐만 아니라 상태 업데이트를 위한 업데이트 함수만 추출할 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SignInButton</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [, setAuthUser] = <span class="title function_">useRecoilState</span>(authUserState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSignIn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="title function_">setAuthUser</span>(&#123; name, email &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleSignIn&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      로그인</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-selectors"><a href="#2-selectors" class="headerlink" title="2. selectors"></a>2. selectors</h3><p>selector는 atom이나 다른 selector를 입력받아 파생된 상태를 생성하는 순수함수이다. <strong>상위의 atom, selector가 업데이트되면 하위의 selector도 다시 실행된다.</strong> 컴포넌트는 atom과 마찬가지로 selector가 변경되면 다시 렌더링된다.</p><p>최소한의 상태만 atom에 저장하고 selector로 파생된 상태를 효과적으로 계산하여 불필요한 상태 보존을 방지한다.</p><p>selector는 어떤 컴포넌트가 필요로하는지, 어떤 상태에 의존하는지 추적하므로 함수적인 접근 방식을 매우 효율적으로 만든다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> authUserNameState = <span class="title function_">selector</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&quot;authUserNameState&quot;</span>,</span><br><span class="line">  <span class="attr">get</span>:(&#123; get &#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> authUser = <span class="title function_">get</span>(authUserState);</span><br><span class="line">    <span class="keyword">return</span> authUser.<span class="property">name</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>get 메서드 내부의 <code>get</code>함수는 atom 또는 다른 selector를 전달받을 수 있다. </li><li>전달받게 되면 자동적으로 종속 관계가 생성되며 참조했던 다른 atom, selector가 업데이트 되면 다시 실행된다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;상태란&quot;&gt;&lt;a href=&quot;#상태란&quot; class=&quot;headerlink&quot; title=&quot;상태란?&quot;&gt;&lt;/a&gt;상태란?&lt;/h1&gt;&lt;p&gt;상태(state)는 애플리케이션의 작동 방식을 설명하는 모든 데이터를 말한다. 상태 관리는 시간의 흐름에 따라 상태</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="Recoil" scheme="https://loco9939.github.io/tags/Recoil/"/>
    
  </entry>
  
  <entry>
    <title>리액트 접근성 높이는 모달 구현하기</title>
    <link href="https://loco9939.github.io/2023/03/21/React/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%A0%91%EA%B7%BC%EC%84%B1-%EB%86%92%EC%9D%B4%EB%8A%94-%EB%AA%A8%EB%8B%AC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/21/React/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%A0%91%EA%B7%BC%EC%84%B1-%EB%86%92%EC%9D%B4%EB%8A%94-%EB%AA%A8%EB%8B%AC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-21T11:09:51.000Z</published>
    <updated>2023-03-21T14:23:10.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="createPortal-사용하여-접근성-높인-모달-구현하기"><a href="#createPortal-사용하여-접근성-높인-모달-구현하기" class="headerlink" title="createPortal 사용하여 접근성 높인 모달 구현하기"></a>createPortal 사용하여 접근성 높인 모달 구현하기</h1><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Modal.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPortal &#125; <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Modal</span>(<span class="params">&#123; onClick &#125;: &#123; onClick: () =&gt; <span class="built_in">void</span> &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalClose</span> = (<span class="params">e: KeyboardEvent</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">key</span> !== <span class="string">&quot;Escape&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">onClick</span>();</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`position: fixed; top: -<span class="subst">$&#123;<span class="variable language_">window</span>.scrollY&#125;</span>px`</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> scrollY = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">top</span>;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`position: &quot;&quot;; top: &quot;&quot;;`</span>;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="built_in">parseInt</span>(scrollY || <span class="string">&quot;0&quot;</span>) * -<span class="number">1</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleModalClose);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleModalClose);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">createPortal</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-modal</span>=<span class="string">&quot;true&quot;</span> <span class="attr">className</span>=<span class="string">&quot;Dialog&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>React 포털로 연 다이얼로그(with 모달)<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__body&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>여기가 React 앱 밖의 세상인가요?!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;closeButton&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">aria-label</span>=<span class="string">&quot;모달 다이얼로그 닫기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title</span>=<span class="string">&quot;모달 다이얼로그 닫기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">width</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">height</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">fill-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__dim&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>,</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;modal&quot;</span>) <span class="keyword">as</span> <span class="title class_">HTMLElement</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Modal</span>;</span><br></pre></td></tr></table></figure><ul><li>createPortal로 root 태그가 아닌 새로운 id가 modal인 태그에 modal을 생성하였다.</li><li>Esc 키를 눌러 모달을 끌 수 있게 하였다.</li><li>모달이 열려있을 때, 모달 뒤의 배경이 스크롤되지 않도록 하였다.</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Modal</span> <span class="keyword">from</span> <span class="string">&quot;./Modal&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ModalBtn</span> <span class="keyword">from</span> <span class="string">&quot;./ModalBtn&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [modalOpen, setModalOpen] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalOpen</span> = (<span class="params"></span>) =&gt; <span class="title function_">setModalOpen</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalClose</span> = (<span class="params"></span>) =&gt; <span class="title function_">setModalOpen</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ModalBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;handleModalOpen&#125;</span> <span class="attr">modalOpen</span>=<span class="string">&#123;modalOpen&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;modalOpen &amp;&amp; <span class="tag">&lt;<span class="name">Modal</span> <span class="attr">onClick</span>=<span class="string">&#123;handleModalClose&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><ul><li>ModalBtn을 클릭하여 모달을 열 수 있게한다.</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ModalBtn.tsx</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ModalBtn</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  onClick,</span></span><br><span class="line"><span class="params">  modalOpen,</span></span><br><span class="line"><span class="params">&#125;: &#123;</span></span><br><span class="line"><span class="params">  onClick: () =&gt; <span class="built_in">void</span>;</span></span><br><span class="line"><span class="params">  modalOpen: <span class="built_in">boolean</span>;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;openDialogButton&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">aria-haspopup</span>=<span class="string">&quot;dialog&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">aria-label</span>=<span class="string">&quot;모달 다이얼로그 열기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">title</span>=<span class="string">&quot;모달 다이얼로그 열기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">tabIndex</span>=<span class="string">&#123;modalOpen</span> ? <span class="attr">-1</span> <span class="attr">:</span> <span class="attr">0</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">fill-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 4h-13v18h20v-11h1v12h-22v-20h14v1zm10 5h-1v-6.293l-11.646 11.647-.708-.708 11.647-11.646h-6.293v-1h8v8z&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ModalBtn</span>;</span><br></pre></td></tr></table></figure><ul><li>ModalBtn에 모달 상태를 전달하여 모달이 열려있다면 모달 배경에 포커스가 가지 않도록 하였다.</li></ul><blockquote><p>배경 요소에 모든 focus 요소에 tabIndex 속성을 설정해줘야하는 번거로움이 있다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;createPortal-사용하여-접근성-높인-모달-구현하기&quot;&gt;&lt;a href=&quot;#createPortal-사용하여-접근성-높인-모달-구현하기&quot; class=&quot;headerlink&quot; title=&quot;createPortal 사용하여 접근성 높인 모달 </summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
    <category term="모달" scheme="https://loco9939.github.io/tags/%EB%AA%A8%EB%8B%AC/"/>
    
    <category term="createPortal" scheme="https://loco9939.github.io/tags/createPortal/"/>
    
  </entry>
  
  <entry>
    <title>Emotion Styled Components에서 props 지정하기</title>
    <link href="https://loco9939.github.io/2023/03/20/Daily/Emotion-Styled-Components%EC%97%90%EC%84%9C-props-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/20/Daily/Emotion-Styled-Components%EC%97%90%EC%84%9C-props-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-20T13:57:22.000Z</published>
    <updated>2023-03-20T14:11:20.134Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;@emotion/styled&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(props) =&gt; (props.isClicked ? <span class="string">&quot;green&quot;</span> : <span class="string">&quot;white&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Btn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">isClicked</span>&gt;</span>선택하기<span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>위와 같이 사용하게 되면 StyledButton 에 커스텀 props를 타입 선언을 해주지 않았기 때문에 에러를 발생한다.</li></ul><p>이를 해결하기 위해 커스텀 props 타입을 단언해주면된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;@emotion/styled&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span>&lt;&#123; <span class="attr">isClicked</span>: boolean &#125;&gt;<span class="string">`</span></span><br><span class="line"><span class="string">  width: 100px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(props) =&gt; (props.isClicked ? <span class="string">&quot;green&quot;</span> : <span class="string">&quot;white&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Btn</span>(<span class="params">&#123; isClicked &#125;: &#123; isClicked: boolean &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">isClicked</span>=<span class="string">&#123;isClicked&#125;</span>&gt;</span>선택하기<span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="emotion" scheme="https://loco9939.github.io/tags/emotion/"/>
    
    <category term="styled components" scheme="https://loco9939.github.io/tags/styled-components/"/>
    
    <category term="typescript" scheme="https://loco9939.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>image sprite 실전 사용기</title>
    <link href="https://loco9939.github.io/2023/03/20/Daily/image-sprite-%EC%8B%A4%EC%A0%84-%EC%82%AC%EC%9A%A9%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/20/Daily/image-sprite-%EC%8B%A4%EC%A0%84-%EC%82%AC%EC%9A%A9%EA%B8%B0/</id>
    <published>2023-03-20T13:40:05.000Z</published>
    <updated>2023-03-20T13:52:47.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image-sprite-실전-사용기"><a href="#image-sprite-실전-사용기" class="headerlink" title="image sprite 실전 사용기"></a>image sprite 실전 사용기</h1><p>기존 프로젝트에서는 돋보기 아이콘을 불러올 때, png 파일을 통해서 각각 한개씩 불러왔다.</p><p>이렇게 되면 돋보기 이미지는 상태에 따라 default, focus, disabled 총 3가지 상태를 가진 이미지가 있기 때문에 이미지를 3번 불러와야한다.</p><p>하지만 이미지 스프라이트를 사용하면, image sprite를 사용하여 3가지 상태의 이미지를 svg 파일 한 곳에 넣어두고 이를 배경이미지로 불러와서 원하는 위치의 이미지에 position을 주어 보여주도록 하였다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;img_navSprites.png&quot;</span>) <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>이미지를 배경으로 불러온 뒤 left, top 속성으로 배치한다.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.png&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>src 속성을 비워두게 되면 img 태그에 테두리가 생기게 되는데, 이는 제거하려해도 제거할 수가 없다. (border, outline, padding, margin 여러 방법을 써봐도 안됐다.)</li></ul><p>그래서 src 속성을 비워두지 않기 위해 투명한 이미지 경로를 넣어준 것이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;img_navSprites.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 또는 img 태그 대신 i 태그 사용하기</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">className</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>오늘 프로젝트를 진행하면서 icon을 불러오는 용도로 사용했기 때문에 img 태그 대신 i 태그를 사용하여 불러오니 src 속성없이도 불러올 수 있어서 편리하였다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image-sprite-실전-사용기&quot;&gt;&lt;a href=&quot;#image-sprite-실전-사용기&quot; class=&quot;headerlink&quot; title=&quot;image sprite 실전 사용기&quot;&gt;&lt;/a&gt;image sprite 실전 사용기&lt;/h1&gt;&lt;p&gt;기존</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="image sprite" scheme="https://loco9939.github.io/tags/image-sprite/"/>
    
  </entry>
  
  <entry>
    <title>리액트에서 이미지 넣는 방법</title>
    <link href="https://loco9939.github.io/2023/03/20/React/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%84%A3%EB%8A%94-%EB%B0%A9%EB%B2%95/"/>
    <id>https://loco9939.github.io/2023/03/20/React/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%84%A3%EB%8A%94-%EB%B0%A9%EB%B2%95/</id>
    <published>2023-03-20T13:23:51.000Z</published>
    <updated>2023-03-20T13:38:53.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="리액트에서-이미지-넣기"><a href="#리액트에서-이미지-넣기" class="headerlink" title="리액트에서 이미지 넣기"></a>리액트에서 이미지 넣기</h1><h2 id="1-import-구문-사용하기"><a href="#1-import-구문-사용하기" class="headerlink" title="1. import 구문 사용하기"></a>1. import 구문 사용하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Logo</span> <span class="keyword">from</span> <span class="string">&quot;./assets/img/Logo.png&quot;</span>;</span><br></pre></td></tr></table></figure><p>컴포넌트에서 import 구문을 사용하여 이미지를 불러올 수 있다.</p><p>이렇게 불러온 이미지는 img 태그의 src 속성에 할당한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;Logo&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;Logo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>단, import는 React가 처리하지 않는다는 것을 명심해야한다. 이는 Webpack이나 vite같은 번들러들에 의해 처리된다.</p></blockquote><h2 id="2-public-폴더에-이미지-불러오기"><a href="#2-public-폴더에-이미지-불러오기" class="headerlink" title="2. public 폴더에 이미지 불러오기"></a>2. public 폴더에 이미지 불러오기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public</span><br><span class="line">|__images</span><br><span class="line">    |__logo.png</span><br></pre></td></tr></table></figure><p>다음과 같이 public 폴더에 images를 담아두고 public 폴더를 절대경로로 이미지를 불러올 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Logo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>public으로 이미지를 불러오게 되면 브라우저에서 <a href="http://localhost:3000/images/logo.png">http://localhost:3000/images/logo.png</a> 경로로 해당 파일을 오픈할 수 있다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;리액트에서-이미지-넣기&quot;&gt;&lt;a href=&quot;#리액트에서-이미지-넣기&quot; class=&quot;headerlink&quot; title=&quot;리액트에서 이미지 넣기&quot;&gt;&lt;/a&gt;리액트에서 이미지 넣기&lt;/h1&gt;&lt;h2 id=&quot;1-import-구문-사용하기&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
  </entry>
  
  <entry>
    <title>컴포넌트 구성과 상태관리 전략</title>
    <link href="https://loco9939.github.io/2023/03/18/React/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%96%B4%EB%96%A4-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/"/>
    <id>https://loco9939.github.io/2023/03/18/React/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%96%B4%EB%96%A4-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</id>
    <published>2023-03-18T00:16:28.000Z</published>
    <updated>2023-03-18T00:48:55.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="데이터와-디자인을-컴포넌트로-구성하기"><a href="#데이터와-디자인을-컴포넌트로-구성하기" class="headerlink" title="데이터와 디자인을 컴포넌트로 구성하기"></a>데이터와 디자인을 컴포넌트로 구성하기</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1920</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;사과&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1640</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;두리안&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">2480</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;아보카도&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1700</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;시금치&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">2800</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;호박&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1330</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;완도콩&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/comp/design.png" alt="design"></p><p>위와 같이 데이터와 디자인 시안이 제시되었을 때, 컴포넌트를 어떻게 구성하는 것이 좋을지 생각해본다.</p><p><strong>UI와 데이터는 주로 동일한 모양을 갖기 때문에 데이터 구조와 컴포넌트 구조가 자연스럽게 매핑된다.</strong></p><p>그러므로 다음과 같이 컴포넌트를 구성할 수 있을 것이다.</p><p><img src="/../../images/comp/components.png" alt="component"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FilterableProductTable</span><br><span class="line"> ├── SearchBar</span><br><span class="line"> └── ProductTable</span><br><span class="line">      ├── ProductCategoryRow</span><br><span class="line">      └── ProductRow</span><br></pre></td></tr></table></figure><p>폴더 구조는 위와 같이 구성할 수 있을 것이다.</p><blockquote><p>이상적인 컴포넌트 설계는 한가지만 책임하는 것이다. 만약 한가지 이상의 처리가 필요하다면 컴포넌트를 더 작은 컴포넌트로 나눠야한다.</p></blockquote><h2 id="React-정적-컴포넌트-구성"><a href="#React-정적-컴포넌트-구성" class="headerlink" title="React 정적 컴포넌트 구성"></a>React 정적 컴포넌트 구성</h2><p>컴포넌트에 대한 구상이 끝났으므로 React로 앱을 빌드해보자.</p><p>이 때 가장 간단한 접근법은 사용자와의 상호작용은 고려하지 않고 데이터 모델에서 UI를 렌더링 하는 버전으로 작성하는 것이다.</p><p>데이터 모델을 렌더링하는 앱을 만들고자 한다면 props와 state를 사용하고 싶을 것이다. 하지만 <span style="color:red;">현재 단계에서는 state를 사용하지 않는다.</span><br>왜냐하면 state는 사용자와 상호작용할 때 사용하기 때문에 아직 단계가 아니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">PRODUCTS</span> <span class="keyword">from</span> <span class="string">&quot;../../api/products.json&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterableProductTable</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> products = [...<span class="variable constant_">PRODUCTS</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;filterableProductTable&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SearchBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProductTable</span> <span class="attr">products</span>=<span class="string">&#123;products&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterableProductTable</span>;</span><br></pre></td></tr></table></figure><blockquote><p>정적 빌드된 컴포넌트는 JSX만을 반환한다. 그리고 컴포넌트 트리 최상위 컴포넌트에서 데이터 모델을 하위 props로 전달하는 “단방향 데이터 흐름”을 구현한다.</p></blockquote><h2 id="컴포넌트-UI-대화형으로-만들기"><a href="#컴포넌트-UI-대화형으로-만들기" class="headerlink" title="컴포넌트 UI 대화형으로 만들기"></a>컴포넌트 UI 대화형으로 만들기</h2><p>UI를 대화형으로 만들려면 사용자가 기본 데이터를 변경할 수 있도록 해야한다. 이러한 상호작용이 필요할 때, state를 사용한다.</p><p><strong>state는 앱이 기억하고 변경해야 할 데이터의 최소 집합이라고 생각할 수 있다.</strong></p><p>이 때 상태를 구성하는 가장 중요한 원칙은 DRY(Don’t Repeat Yourself)이다. state는 최소한으로만 필요해야하며 나머지는 필요할 때 다시 고민한다.</p><p>그렇다면 위 컴포넌트에서는 state는 무엇이 될 수 있을까?</p><h3 id="state와-props-구분하기"><a href="#state와-props-구분하기" class="headerlink" title="state와 props 구분하기"></a>state와 props 구분하기</h3><h4 id="1-시간이-지남에도-변경이-없다면"><a href="#1-시간이-지남에도-변경이-없다면" class="headerlink" title="1. 시간이 지남에도 변경이 없다면?"></a>1. 시간이 지남에도 변경이 없다면?</h4><p>&#x3D;&gt; 이는 state가 아니다. state는 사용자와 상호작용해야하는 요소이기 때문이다.</p><h4 id="2-props를-통해-상위-컴포넌트로-부터-전달될-수-있다면"><a href="#2-props를-통해-상위-컴포넌트로-부터-전달될-수-있다면" class="headerlink" title="2. props를 통해 상위 컴포넌트로 부터 전달될 수 있다면?"></a>2. props를 통해 상위 컴포넌트로 부터 전달될 수 있다면?</h4><p>&#x3D;&gt; 이는 state가 아니다.</p><h4 id="3-컴포넌트의-기존-state-또는-props를-기반으로-계산할-수-있다면"><a href="#3-컴포넌트의-기존-state-또는-props를-기반으로-계산할-수-있다면" class="headerlink" title="3. 컴포넌트의 기존 state 또는 props를 기반으로 계산할 수 있다면?"></a>3. 컴포넌트의 기존 state 또는 props를 기반으로 계산할 수 있다면?</h4><p>&#x3D;&gt; 이는 state가 아니다.</p><p>그러므로 위 예시에서 state는 검색 텍스트 값과 체크박스 값이 될 수 있다.</p><h2 id="앱-상태-관리-하기"><a href="#앱-상태-관리-하기" class="headerlink" title="앱 상태 관리 하기"></a>앱 상태 관리 하기</h2><p>자 이제 앱이 가지는 최소한의 state를 파악했다. 그러면 이 state를 변경하고 소유하는 컴포넌트는 누가 할 것인지를 정해줘야한다.</p><p>React는 단방향 데이터 흐름을 사용하기 때문에 상위 컴포넌트에서 하위 컴포넌트로 데이터가 전달된다.</p><h3 id="컴포넌트-상태-관리-전략"><a href="#컴포넌트-상태-관리-전략" class="headerlink" title="컴포넌트 상태 관리 전략"></a>컴포넌트 상태 관리 전략</h3><ol><li>state를 기반으로 무언가를 렌더링하는 모든 컴포넌트 확인한다.</li><li>해당 컴포넌트와 가장 가까운 공통 상위 컴포넌트를 찾는다.</li></ol><p>이제 state를 어디서 관리할지 정해줘야한다. 경우의 수는 3가지가 있다.</p><ul><li>state를 공통 상위 컴포넌트에서 관리</li><li>state를 공통 상위 컴포넌트보다 상위에서 관리</li><li>state를 소유하는 것이 타당한 컴포넌트를 찾지 못한 경우, state를 유지하기 위한 새로운 컴포넌트 만들고 공통 상위 컴포넌트 보다 위 어딘가에 추가하여 관리</li></ul><p>위 예시에서 검색 텍스트 값과 체크박스 값이 state라고 하였다.</p><h3 id="컴포넌트-상태-관리-단계"><a href="#컴포넌트-상태-관리-단계" class="headerlink" title="컴포넌트 상태 관리 단계"></a>컴포넌트 상태 관리 단계</h3><ol><li>상태를 사용하는 컴포넌트 식별</li></ol><ul><li>SearchBar - 검색 텍스트 state 관리</li><li>ProductTable - 체크박스 유무 state 관리</li></ul><ol start="2"><li>공통 상위 컴포넌트 찾기</li></ol><p>SearchBar, ProductTable 의 공통 상위 컴포넌트는 FilterableProductTable 컴포넌트이다.</p><ol start="3"><li>state가 있는 위치 결정</li></ol><p>공통 상위 컴포넌트인 FilterableProductTable 컴포넌트에서 관리한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">PRODUCTS</span> <span class="keyword">from</span> <span class="string">&quot;../../api/products.json&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchBar</span> <span class="keyword">from</span> <span class="string">&quot;./SearchBar/SearchBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ProductTable</span> <span class="keyword">from</span> <span class="string">&quot;./ProductTable/ProductTable&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterableProductTable</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> products = [...<span class="variable constant_">PRODUCTS</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [searchText, setSearchText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> [inStockOnly, setInStockOnly] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handeChangeSearchText</span> = (<span class="params">newSearchText: string</span>) =&gt;</span><br><span class="line">    <span class="title function_">setSearchText</span>(newSearchText);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handeChangeInStockOnly</span> = (<span class="params">inStockOnlyState: boolean</span>) =&gt;</span><br><span class="line">    <span class="title function_">setInStockOnly</span>(inStockOnlyState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;filterableProductTable&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SearchBar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">searchText</span>=<span class="string">&#123;searchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">inStockOnly</span>=<span class="string">&#123;inStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChangeSearchText</span>=<span class="string">&#123;handeChangeSearchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChangeInStockOnly</span>=<span class="string">&#123;handeChangeInStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProductTable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">products</span>=<span class="string">&#123;products&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">searchText</span>=<span class="string">&#123;searchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">inStockOnly</span>=<span class="string">&#123;inStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterableProductTable</span>;</span><br></pre></td></tr></table></figure><p>해당 컴포넌트에서 state를 관리하고 props로 전달하는 것은 완료했으니 state를 관리하는 컴포넌트에서 state 변경함수까지 props 전달하여 사용자가 UI를 업데이트 할 수 있도록 구현해주면 완성이다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;데이터와-디자인을-컴포넌트로-구성하기&quot;&gt;&lt;a href=&quot;#데이터와-디자인을-컴포넌트로-구성하기&quot; class=&quot;headerlink&quot; title=&quot;데이터와 디자인을 컴포넌트로 구성하기&quot;&gt;&lt;/a&gt;데이터와 디자인을 컴포넌트로 구성하기&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
    <category term="상태관리전략" scheme="https://loco9939.github.io/tags/%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC%EC%A0%84%EB%9E%B5/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 19일차&gt; Accordion</title>
    <link href="https://loco9939.github.io/2023/03/17/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-19%EC%9D%BC%EC%B0%A8-Accordion/"/>
    <id>https://loco9939.github.io/2023/03/17/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-19%EC%9D%BC%EC%B0%A8-Accordion/</id>
    <published>2023-03-17T12:29:04.000Z</published>
    <updated>2023-03-17T13:13:49.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Accordion"><a href="#Accordion" class="headerlink" title="Accordion"></a>Accordion</h1><p><img src="/../../images/CSS/accordion/default.png" alt="default"></p><p><img src="/../../images/CSS/accordion/active.png" alt="active"></p><h2 id="1-HTML-마크업-설계"><a href="#1-HTML-마크업-설계" class="headerlink" title="1. HTML 마크업 설계"></a>1. HTML 마크업 설계</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-CSS-스타일링"><a href="#2-CSS-스타일링" class="headerlink" title="2. CSS 스타일링"></a>2. CSS 스타일링</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.accordion</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */</span></span><br><span class="line"><span class="selector-class">.accordion</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Style the accordion panel. <span class="doctag">Note:</span> hidden by default */</span></span><br><span class="line"><span class="selector-class">.panel</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">transition</span>: max-height <span class="number">0.4s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-React-로직"><a href="#3-React-로직" class="headerlink" title="3. React 로직"></a>3. React 로직</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Accordion.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./styles/main.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Accordion</span>(<span class="params">&#123; title, info &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [showInfo, setShowInfo] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;accordion&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setShowInfo(!showInfo)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;title&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">panel</span> $&#123;<span class="attr">showInfo</span> ? &quot;<span class="attr">active</span>&quot; <span class="attr">:</span> &quot;&quot;&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;info&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Accordion</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Accordion&quot;&gt;&lt;a href=&quot;#Accordion&quot; class=&quot;headerlink&quot; title=&quot;Accordion&quot;&gt;&lt;/a&gt;Accordion&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/../../images/CSS/accordion/defa</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="accordion" scheme="https://loco9939.github.io/tags/accordion/"/>
    
  </entry>
  
  <entry>
    <title>VSCode Remote SSH로 원격으로 코딩</title>
    <link href="https://loco9939.github.io/2023/03/17/Daily/VSCode-Remote-SSH%EB%A1%9C-%EC%9B%90%EA%B2%A9%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9/"/>
    <id>https://loco9939.github.io/2023/03/17/Daily/VSCode-Remote-SSH%EB%A1%9C-%EC%9B%90%EA%B2%A9%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9/</id>
    <published>2023-03-17T12:02:53.000Z</published>
    <updated>2023-03-17T12:27:43.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Remote-SSH로-원격-코딩하기"><a href="#Remote-SSH로-원격-코딩하기" class="headerlink" title="Remote SSH로 원격 코딩하기"></a>Remote SSH로 원격 코딩하기</h1><p>우리가 로컬에서 개발한 프로젝트를 서버 컴퓨터에서 실행하고 싶으면 어떻게 해야할까?</p><p>방법은 서버 컴퓨터에서 해당 프로젝트를 실행해주면 된다.</p><p>말로는 정말 쉬워보이지만 막상 하려고 하면 뭐부터 해야할지 모르겠다.</p><p>그래서 단계를 나눠서 도전해보자.</p><h2 id="과정"><a href="#과정" class="headerlink" title="과정"></a>과정</h2><p><img src="/../../images/Daily/remotessh/remotessh.png" alt="remotessh"></p><ol><li>우선 VSCode에서 “Remote - SSH”라는 익스텐션을 다운받는다. 해당 extension을 사용하여 서버 컴퓨터에서 원격으로 프로젝트를 실행할 것이다.</li></ol><p><img src="/../../images/Daily/remotessh/sshsetting1.png" alt="sshSettings1"></p><ol start="2"><li><p>톱니바퀴를 눌러서 config 파일을 연다.</p></li><li><p>config 파일 설정은 다음과 같다.</p></li></ol><p><img src="/../../images/Daily/remotessh/sshsetting2.png" alt="sshSetting2"></p><ul><li>Host는 원격 서버의 이름을 나타낸다.</li><li>User는 계정 이름으로 보통 “ubuntu”</li><li>ssh 파일 경로는 SSH키가 담긴 .pem 파일의 경로</li></ul><ol start="4"><li>이제 VSCode를 사용하여 서버를 원격으로 조종할 수 있다.</li></ol><p><img src="/../../images/Daily/remotessh/sshsettting3.png" alt="sshSetting3"></p><p>우측에 새창으로 열기를 클릭하면 서버환경에서 VSCode가 열리게 될 것이다.</p><p>이 후 VSCode에서 터미널을 켜서 git clone을 하여 github 레포지토리를 클론한 다음</p><p>프로젝트를 실행하면 원격으로 서버 컴퓨터에서 프로젝트를 실행할 수 있게된다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Remote-SSH로-원격-코딩하기&quot;&gt;&lt;a href=&quot;#Remote-SSH로-원격-코딩하기&quot; class=&quot;headerlink&quot; title=&quot;Remote SSH로 원격 코딩하기&quot;&gt;&lt;/a&gt;Remote SSH로 원격 코딩하기&lt;/h1&gt;&lt;p&gt;우리</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="remote" scheme="https://loco9939.github.io/tags/remote/"/>
    
    <category term="ssh" scheme="https://loco9939.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 18일차&gt; form</title>
    <link href="https://loco9939.github.io/2023/03/10/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-18%EC%9D%BC%EC%B0%A8-form/"/>
    <id>https://loco9939.github.io/2023/03/10/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-18%EC%9D%BC%EC%B0%A8-form/</id>
    <published>2023-03-10T11:10:58.000Z</published>
    <updated>2023-03-10T11:26:28.493Z</updated>
    
    <content type="html"><![CDATA[<p>기본적인 HTML구조와 CSS로 다음과 같은 form을 만들 수 있다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>,</span></span><br><span class="line"><span class="language-css">    select &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#4caf50</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#45a049</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Using CSS to style an HTML Form<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/action_page.php&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fname&quot;</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;fname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;lname&quot;</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;lname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your last name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>Country<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;australia&quot;</span>&gt;</span>Australia<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;canada&quot;</span>&gt;</span>Canada<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/form/common.png" alt="commonForm"></p><h2 id="focused-Inputs"><a href="#focused-Inputs" class="headerlink" title="focused Inputs"></a>focused Inputs</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="icon-x2F-image-삽입하기"><a href="#icon-x2F-image-삽입하기" class="headerlink" title="icon&#x2F;image 삽입하기"></a>icon&#x2F;image 삽입하기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;searchicon.png&quot;</span>);</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span> <span class="number">12px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/form/icon.png" alt="icon"></p><h2 id="animated-Search-Input"><a href="#animated-Search-Input" class="headerlink" title="animated Search Input"></a>animated Search Input</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">0.4s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="textarea-사이즈-재조정-방지하기"><a href="#textarea-사이즈-재조정-방지하기" class="headerlink" title="textarea 사이즈 재조정 방지하기"></a>textarea 사이즈 재조정 방지하기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">resize</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>resize</strong> 속성을 none으로 주어 사이즈 재조정을 막는다.</li></ul><h2 id="반응형-form-만들기"><a href="#반응형-form-만들기" class="headerlink" title="반응형 form 만들기"></a>반응형 form 만들기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">resize</span>: vertical;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">12px</span> <span class="number">12px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#04aa6d</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#45a049</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-25</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-75</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Clear floats after the columns */</span></span><br><span class="line"><span class="selector-class">.row</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.col-25</span>,</span><br><span class="line">  <span class="selector-class">.col-75</span>,</span><br><span class="line">  <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Responsive Form<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  Resize the browser window to see the effect. When the screen is less than</span><br><span class="line">  600px wide, make the two columns stack on top of each other instead of next to</span><br><span class="line">  each other.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/action_page.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fname&quot;</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;fname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;lname&quot;</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;lname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your last name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>Country<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;australia&quot;</span>&gt;</span>Australia<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;canada&quot;</span>&gt;</span>Canada<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>Subject<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;subject&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Write something..&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;height:200px&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;기본적인 HTML구조와 CSS로 다음과 같은 form을 만들 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="form" scheme="https://loco9939.github.io/tags/form/"/>
    
  </entry>
  
  <entry>
    <title>시간복잡도 연습하기</title>
    <link href="https://loco9939.github.io/2023/03/10/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/10/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-10T03:54:49.000Z</published>
    <updated>2023-03-10T10:44:03.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="반복문-시간-복잡도"><a href="#반복문-시간-복잡도" class="headerlink" title="반복문 시간 복잡도"></a>반복문 시간 복잡도</h1><p>다음 코드의 시간 복잡도를 구해보자.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">            a += i+j;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; cnt : &quot;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>처음에는 하나씩 콘솔을 찍어보면서 계산해보자.</p><ol><li>i &#x3D; 0, j는 무시;</li><li>i &#x3D; 1, j &#x3D; 0</li><li>i &#x3D; 2, j &#x3D; 0,1</li><li>i &#x3D; 3, j &#x3D; 0,1,2</li></ol><p>정사각형의 한 변의 길이가 n일 때, 정사각형의 넓이는 n^2이다.</p><p>이와 마찬가지로 시간복잡도도 해당 도형의 넓이로 구할 수 있다.</p><p>위 식을 넓이로 나타내면 j는 i를 포함하지 않고 있기 때문에 <code>n * (n - 1) % 2</code>로 나타낼 수 있다.</p><h1 id="재귀함수-시간-복잡도"><a href="#재귀함수-시간-복잡도" class="headerlink" title="재귀함수 시간 복잡도"></a>재귀함수 시간 복잡도</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, a[<span class="number">1004</span>], cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">go</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> a[l];</span><br><span class="line">    <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="built_in">go</span>(l, mid) + <span class="built_in">go</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i - <span class="number">1</span>] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum = <span class="built_in">go</span>(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;cnt: &#x27;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>시간복잡도는 어떤 로직이 몇 번 반복되었는지를 식으로 만들고 빅오표기법으로 표현하는 것이다.</strong></p><p>좀 더 자세히 말하면 <code>재귀함수의 메인로직 * 몇번 호출</code>되는지이다.</p><p>그래서 해당 go 함수가 몇번 호출되는지 직접 손코딩으로 그려보며 세어보았다.</p><p>n &#x3D; 5일 때, 9가 나오고 n &#x3D; 10일 때, 19, n &#x3D; 20일 때, 39가 나오는 것을 보고 아 시간 복잡도가 <code>2n - 1</code>이구나라는 것을 알게되었다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; <span class="type">int</span> N, cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> N)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(N == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">solve</span>(N - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="built_in">solve</span>(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>예를 들어 n &#x3D; 3일 때, 처음 1회 실행되고 함수가 3번씩 호출되는데 만약 N이 0이아니면 또 3번씩 호출되므로 공비가 3인 등비수열로 생각할 수 있다.</p><p>따라서 등비수열의 합식이 성립한다.</p><p><img src="/../../../images/CS/DataStructure/BiOQuiz/time.png" alt="time complexity"></p><h3 id="📌-Tip"><a href="#📌-Tip" class="headerlink" title="📌 Tip"></a>📌 Tip</h3><p>함수 하나가 호출될 때 이 함수가 4번 호출된다면 &#x3D;&gt; <code>4^n</code></p><p>함수 하나가 호출될 때, 이 함수가 2번 호출된다면 &#x3D;&gt; <code>2^n</code></p><h1 id="로그-지수-역함수의-시간-복잡도"><a href="#로그-지수-역함수의-시간-복잡도" class="headerlink" title="로그 지수 역함수의 시간 복잡도"></a>로그 지수 역함수의 시간 복잡도</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; <span class="type">int</span> N;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, i = N;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        a += i;</span><br><span class="line">        i /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="built_in">solve</span>(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위 식에서 while문은 <code>log N + 1</code>의 시간복잡도를 가지고 빅오표기법으로 나타내면 <code>log N</code>이다.</p><blockquote><p><code>log N</code>은 2를 몇번 곱해서 N의 값이 될 수 있는지를 나타낸 수이다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;반복문-시간-복잡도&quot;&gt;&lt;a href=&quot;#반복문-시간-복잡도&quot; class=&quot;headerlink&quot; title=&quot;반복문 시간 복잡도&quot;&gt;&lt;/a&gt;반복문 시간 복잡도&lt;/h1&gt;&lt;p&gt;다음 코드의 시간 복잡도를 구해보자.&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="자료구조" scheme="https://loco9939.github.io/categories/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>정적 타입 시스템의 필요성</title>
    <link href="https://loco9939.github.io/2023/03/10/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1/"/>
    <id>https://loco9939.github.io/2023/03/10/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1/</id>
    <published>2023-03-10T02:53:52.000Z</published>
    <updated>2023-03-10T03:25:46.205Z</updated>
    
    <content type="html"><![CDATA[<p>개발자는 사용자에게 안정적인 서비스를 제공하기 위해 여러가지 방법을 사용한다.</p><p>정적 타입 시스템도 그 중 하나다.</p><h2 id="타입-시스템"><a href="#타입-시스템" class="headerlink" title="타입 시스템"></a>타입 시스템</h2><p>타입 시스템은 개발자가 정의한 타입을 기반으로 해당 타입을 언어와 연관시키는 메커니즘이다.</p><ul><li>동등: 두 타입이 동일할 때 적용 (number:number)</li><li>호환: 두가지 타입이 정확히 일치하지 않더라도 어느정도 호환이 되는지를 나타내는 규칙(any: number)</li><li>추론: 타입이 정의되어 있지 않지만 주변 문맥에 따라 타입이 결정되는 규칙(a&#x3D;3 일 때, a는 number)</li></ul><p>모든 언어는 타입시스템이 존재하고 동적 타입과 정적 타입으로 나뉜다.</p><h2 id="동적-타입과-정적-타입-차이"><a href="#동적-타입과-정적-타입-차이" class="headerlink" title="동적 타입과 정적 타입 차이"></a>동적 타입과 정적 타입 차이</h2><h3 id="동적-타입"><a href="#동적-타입" class="headerlink" title="동적 타입"></a>동적 타입</h3><p>런타임에 모든 변수의 유형을 결정한다. 잘못된 경우 예외 발생시킨다.</p><p>ex) PHP, JS, Python</p><h3 id="정적-타입"><a href="#정적-타입" class="headerlink" title="정적 타입"></a>정적 타입</h3><p>컴파일 타임에 모든 변수의 유형을 결정한다. 잘못된 경우 예외 발생시킨다.</p><p>ex) C, C++, Java</p><h2 id="정적-타입-시스템의-필요성"><a href="#정적-타입-시스템의-필요성" class="headerlink" title="정적 타입 시스템의 필요성"></a>정적 타입 시스템의 필요성</h2><ol><li><p>타입을 명시하여 나중에 다른 개발자가 보더라도 어떤 매개변수를 넣고 이 함수가 어떤 값을 반환하는지 명시적으로 파악 가능</p></li><li><p>어떤 함수 또는 API에 대해 여러가지의 타입으로 이루어진 값이 발생될 수 있는데, 해당 값들에 대한 대처를 “미리” 할 수 있다.</p></li><li><p>매개변수 잘못입력하거나 등의 개발자 잔실수 줄여준다.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;개발자는 사용자에게 안정적인 서비스를 제공하기 위해 여러가지 방법을 사용한다.&lt;/p&gt;
&lt;p&gt;정적 타입 시스템도 그 중 하나다.&lt;/p&gt;
&lt;h2 id=&quot;타입-시스템&quot;&gt;&lt;a href=&quot;#타입-시스템&quot; class=&quot;headerlink&quot; title=&quot;타입</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 17일차&gt; attribute selector</title>
    <link href="https://loco9939.github.io/2023/03/09/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-17%EC%9D%BC%EC%B0%A8-attribute-selector/"/>
    <id>https://loco9939.github.io/2023/03/09/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-17%EC%9D%BC%EC%B0%A8-attribute-selector/</id>
    <published>2023-03-09T12:43:31.000Z</published>
    <updated>2023-03-09T13:17:41.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="attribute"><a href="#attribute" class="headerlink" title="[attribute]"></a>[attribute]</h1><p>특정 attribute를 선택하기 위해 사용하는 선택자이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[target]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>a 태그의 target attribute가 선언된 요소를 선택한다.</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[target=<span class="string">&quot;_blank&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>attribute 값에 해당하는 요소를 선택한다.</li></ul><h2 id="정확히-특정-단어-포함하는-attribute-선택"><a href="#정확히-특정-단어-포함하는-attribute-선택" class="headerlink" title="정확히 특정 단어 포함하는 attribute 선택"></a>정확히 특정 단어 포함하는 attribute 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[title~=<span class="string">&quot;flower&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">5px</span> solid yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute~=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  All images with the title attribute containing the word &quot;flower&quot; get a yellow</span><br><span class="line">  border.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;klematis.jpg&quot;</span> <span class="attr">title</span>=<span class="string">&quot;klematis flower&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> <span class="attr">height</span>=<span class="string">&quot;113&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_flwr.gif&quot;</span> <span class="attr">title</span>=<span class="string">&quot;flower f&quot;</span> <span class="attr">width</span>=<span class="string">&quot;224&quot;</span> <span class="attr">height</span>=<span class="string">&quot;162&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_tree.gif&quot;</span> <span class="attr">title</span>=<span class="string">&quot;tree&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;358&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/space.png"></p><ul><li>title 속성에 “flower” 단어가 포함된 요소를 선택한다.</li></ul><blockquote><p>띄어쓰기로 구분된 요소는 개별요소로 취급하짐나, 하이푼(-)으로 구분된 요소는 여기서 제외된다.</p></blockquote><h2 id="특정-단어를-포함하는-attribute-선택"><a href="#특정-단어를-포함하는-attribute-선택" class="headerlink" title="특정 단어를 포함하는 attribute 선택"></a>특정 단어를 포함하는 attribute 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class|=<span class="string">&quot;top&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute|=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;top-header&quot;</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;top-text&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;topcontent&quot;</span>&gt;</span>Are you learning CSS?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/exactValue.png" alt="include value"></p><ul><li>top이라는 단어가 포함된 요소만 선택하는 것을 확인할 수 있다. (-으로 구분할 수 있다.)</li></ul><h2 id="특정-단어로-시작하는-attribute-속성-선택"><a href="#특정-단어로-시작하는-attribute-속성-선택" class="headerlink" title="특정 단어로 시작하는 attribute 속성 선택"></a>특정 단어로 시작하는 attribute 속성 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class^=<span class="string">&quot;top&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute|=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;top-header&quot;</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;top-text&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;topcontent&quot;</span>&gt;</span>Are you learning CSS?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/startwith.png" alt="startwith"></p><h2 id="특정-단어로-끝나는-attribute-속성-선택"><a href="#특정-단어로-끝나는-attribute-속성-선택" class="headerlink" title="특정 단어로 끝나는 attribute 속성 선택"></a>특정 단어로 끝나는 attribute 속성 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class$=<span class="string">&quot;test&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="특정-값을-포함하는-attribute-속성을-선택"><a href="#특정-값을-포함하는-attribute-속성을-선택" class="headerlink" title="특정 값을 포함하는 attribute 속성을 선택"></a>특정 값을 포함하는 attribute 속성을 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class*=<span class="string">&quot;te&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;attribute&quot;&gt;&lt;a href=&quot;#attribute&quot; class=&quot;headerlink&quot; title=&quot;[attribute]&quot;&gt;&lt;/a&gt;[attribute]&lt;/h1&gt;&lt;p&gt;특정 attribute를 선택하기 위해 사용하는 선택자이다.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="attributeSelector" scheme="https://loco9939.github.io/tags/attributeSelector/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 16일차&gt; Image Sprites</title>
    <link href="https://loco9939.github.io/2023/03/08/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-16%EC%9D%BC%EC%B0%A8-Image-Sprites/"/>
    <id>https://loco9939.github.io/2023/03/08/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-16%EC%9D%BC%EC%B0%A8-Image-Sprites/</id>
    <published>2023-03-08T14:03:56.000Z</published>
    <updated>2023-03-08T14:12:58.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image-sprites"><a href="#image-sprites" class="headerlink" title="image sprites"></a>image sprites</h1><p>이미지 스프라이트는 단일 이미지에 포함된 이미지 모음이다.</p><p>이미지가 많은 웹 페이지 로드하는데 많은 시간이 걸릴 수 있고 서버 요청도 여러번 발생할 수 있다.</p><p>이미지 스프라이트를 사용하면 서버 요청 수가 줄어들고 대역폭이 줄어든다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>3개의 이미지를 사용하는 대신, 하나의 이미지를 사용한다.</p><p>그리고 나서 CSS로 보여주고 싶은 부분만 보여준다.</p><p><img src="/../../images/CSS/imagesprites/img_navsprites.gif" alt="imageSprites"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;home&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;next&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>src 속성은 비워둘 수 없기 때문에 투명한 이미지를 넣어두었다.</li><li>보여주고 싶은 이미지의 부분을 width, height로 정의했다.</li><li>background 속성으로 배경이미지를 불러오고 left, top 속성으로 배치한다.</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#home</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img_navsprites.gif</span>) <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#next</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">43px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img_navsprites.gif</span>) -<span class="number">91px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/imagesprites/homenext.png" alt="homeNext"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image-sprites&quot;&gt;&lt;a href=&quot;#image-sprites&quot; class=&quot;headerlink&quot; title=&quot;image sprites&quot;&gt;&lt;/a&gt;image sprites&lt;/h1&gt;&lt;p&gt;이미지 스프라이트는 단일 이미지에 포함된 이미지</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="imageSprites" scheme="https://loco9939.github.io/tags/imageSprites/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 15일차&gt; Dropdown</title>
    <link href="https://loco9939.github.io/2023/03/07/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-15%EC%9D%BC%EC%B0%A8-Dropdown/"/>
    <id>https://loco9939.github.io/2023/03/07/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-15%EC%9D%BC%EC%B0%A8-Dropdown/</id>
    <published>2023-03-07T14:53:11.000Z</published>
    <updated>2023-03-07T15:06:31.689Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dropdown"><a href="#Dropdown" class="headerlink" title="Dropdown"></a>Dropdown</h1><p>CSS만을 이용하여 dropdown을 구현해보자.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-width</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>Mouse over me<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>우선 dropdown content를 열기 위한 span, button 요소를 사용한다.</p></li><li><p>dropdown content는 div같은 컨테이너 요소를 사용한다.</p></li><li><p>dropdown content를 CSS에 정확하게 배치하기 위해 1,2번을 div로 감싼다.</p></li><li><p>wrapper div에는 <code>position:relative </code>속성을 주어 기준이 되도록 하며 dropdown content에는 <code>position:absolute</code> 속성을 주어 dropdown button 바로 아래에 위치하도록 한다.</p></li><li><p>dropdown content는 hidden 속성이 기본값이다. 그리고 hover시 아래에 보이도록 한다. 그리고 min-width 속성을 줘서 width를 갖게 한다.</p></li></ol><blockquote><p>이때, dropdown button 만큼 넓게 width를 갖게 하고 싶다면 <code>width:100%</code>로 설정해라. 작은 화면에서 스크롤을 활성화 시키려면 <code>overflow:auto</code>를 설정하라.</p></blockquote><ol start="6"><li><p>border를 설정하는 것 대신 box-shadow 속성으로 카드처럼 보이게 할 수 있다.</p></li><li><p>hover 속성은 dropdown menu를 보여줄 때 사용된다.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dropdown&quot;&gt;&lt;a href=&quot;#Dropdown&quot; class=&quot;headerlink&quot; title=&quot;Dropdown&quot;&gt;&lt;/a&gt;Dropdown&lt;/h1&gt;&lt;p&gt;CSS만을 이용하여 dropdown을 구현해보자.&lt;/p&gt;
&lt;figure class=</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="Dropdown" scheme="https://loco9939.github.io/tags/Dropdown/"/>
    
  </entry>
  
  <entry>
    <title>Docker, Container</title>
    <link href="https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EB%8F%84%EC%BB%A4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/"/>
    <id>https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EB%8F%84%EC%BB%A4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</id>
    <published>2023-03-07T14:17:45.000Z</published>
    <updated>2023-03-07T14:51:41.756Z</updated>
    
    <content type="html"><![CDATA[<p>앞서 IaaS와 PaaS의 장점만 결합시킨 것이 도커이다. IaaS의 이식성과 PaaS의 운영비 장점을 갖춘 도커에 대해 알아보자.</p><p>서사를 위해서 전통적인 배포는 어떠했을지 살펴보자.</p><p><img src="/../../../images/CS/docker/deploy.png" alt="deploy"></p><h2 id="전통적-배포"><a href="#전통적-배포" class="headerlink" title="전통적 배포"></a>전통적 배포</h2><p>물리적 컴퓨터 한 대에 하나의 OS를 깔고 여러 프로그램을 설치하는 방식이었다. 이 때, 어떤 프로그램 설치하게되면 다른 앱에 영향을 미친다.</p><p>예를 들어, 예전에 보안 앱을 깔았더니 인터넷이나 어떤 애플리케이션이 제대로 동작하지 않았던 경험이 있다.</p><h2 id="가상화-배포"><a href="#가상화-배포" class="headerlink" title="가상화 배포"></a>가상화 배포</h2><p>전통적 배포에서 발전이 되어 가상머신을 기반으로 배포하는 가상화 배포가 등장하였다.</p><p>Hypervisor는 하나의 시스템상에서 가상 컴퓨터 여러 개를 구동할 수 있도록 중간계층 역할을 한다.</p><p>결과적으로 컴퓨터 한 대로 여러 앱을 독립적으로 실행하여 다른 앱에 영향을 끼치지 않는다.</p><p>단, OS도 독립적이기 때문에 비용이 많이든다.</p><blockquote><p>가상머신: 컴퓨터 모든 부품을(HardWare) 소프트웨어적으로 구현한 것</p></blockquote><h2 id="컨테이너-배포"><a href="#컨테이너-배포" class="headerlink" title="컨테이너 배포"></a>컨테이너 배포</h2><p><img src="/../../../images/CS/docker/container.png" alt="container"></p><p><strong>컨테이너는 코드와 모든 종속성(Node.js, 라이브러리 등)을 패키징하는 소프트웨어 표준 단위이다.</strong></p><p>컨테이너는 VM(Virtual Machine)과 유사하지만, 운영체재(OS)만 공유하고 애플리케이션은 독립적 컴퓨터로 구분되어 있다.</p><p>때문에 애플리케이션끼리 영향을 미치지 않고 비용도 가상화 배포보다 저렴하고 빠르다.</p><blockquote><p>다만 OS는 공유하기 때문에 애플리케이션의 문제가 OS에 영향을 미치면 구동 중인 전체 컨테이너에 문제가 될 수 있다.</p></blockquote><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>그래서 도커는 앞서 설명한 컨테이너라는 단위로 애플리케이션을 실행하는 기능을 제공하는 플랫폼이다.</p><p>여러 컴퓨터 간에 공유된 규격으로 리소스를 공유할 수 있어 유지보수성이 좋다.</p><p>또한 IaaS의 이식성과 PaaS의 운영비 장점을 갖추었다.</p><blockquote><p>기존의 종속성 라이브러리나 파일 등 기존 시스템에 대한 설치 절차를 Dockerfile 스크립트에 작성하고 배포 관련 사항을 도커스웜이나 쿠버네티스에 맞춰 작성해주기만 하면 된다. 그래서 보통 도커 + 쿠버네티스 또는 도커 + 도커 스웜으로 구축된다.</p></blockquote><h2 id="Docker-컨테이너-빌드-과정"><a href="#Docker-컨테이너-빌드-과정" class="headerlink" title="Docker 컨테이너 빌드 과정"></a>Docker 컨테이너 빌드 과정</h2><p><img src="/../../../images/CS/docker/docker.png" alt="docker"></p><ol><li>도커파일이 빌드</li><li>도커 이미지 생성 및 실행</li><li>도커 컨테이너 실행</li></ol><ul><li>도커파일(Dockerfile): 컨테이너에 설치해야하는 패키지, 환경 변수설정 등을 기록한 하나의 파일</li><li>도커이미지: 도커가 도커파일의 단계에 따라 컴퓨터의 상태를 “스냅샷”으로 저장한 것</li><li>컨테이너: 도커가 이미지를 불러와 실행할 때 생성되며, 실행중인 컨테이너는 이미지에 지정된 프로그램과 데이터를 사용해 일반적인 실제 컴퓨터와 연결되어 사용가능</li></ul><h3 id="Docker는-IaaS인가-PaaS인가"><a href="#Docker는-IaaS인가-PaaS인가" class="headerlink" title="Docker는 IaaS인가? PaaS인가?"></a>Docker는 IaaS인가? PaaS인가?</h3><p>엄밀히 말하면 둘 다 아니고 “클라우드 가상화기술”이지만 굳이 따지면 PaaS의 일부라고 보면된다.</p><p>컨테이너의 가상화는 가상 머신의 가상화가 일어나는 곳에서 한 추상화 계층 높은 곳에서 일어난다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;앞서 IaaS와 PaaS의 장점만 결합시킨 것이 도커이다. IaaS의 이식성과 PaaS의 운영비 장점을 갖춘 도커에 대해 알아보자.&lt;/p&gt;
&lt;p&gt;서사를 위해서 전통적인 배포는 어떠했을지 살펴보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../../../</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
    <category term="Docker" scheme="https://loco9939.github.io/tags/Docker/"/>
    
    <category term="Container" scheme="https://loco9939.github.io/tags/Container/"/>
    
  </entry>
  
  <entry>
    <title>클라우드, SaaS, IaaS, Paas</title>
    <link href="https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-SaaS-IaaS-Paas/"/>
    <id>https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-SaaS-IaaS-Paas/</id>
    <published>2023-03-07T13:42:58.000Z</published>
    <updated>2023-03-07T14:18:08.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="클라우드"><a href="#클라우드" class="headerlink" title="클라우드"></a>클라우드</h1><p>클라우드란, 인터넷을 통해 접근할 수 있는 서버와 그 안에서 구동되는 소프트웨어, DB를 의미한다.</p><p>직접적으로 컴퓨터 장비를 구매하지 않고 온라인에 분산되어 존재하는 데이터 센터(클라우드)에게 작업을 맡겨 수행하는 것이다.</p><p>이를 <strong>오프프레미스(off-premise)방식</strong>이라고 한다.</p><p>반면 기업이나 개인이 자체 시설을 보유하고 직접 유지관리하는 데이터 센터(IDC)fmf 온프레미스(on-premise)방식이라고 한다.</p><h2 id="장점"><a href="#장점" class="headerlink" title="장점"></a>장점</h2><ul><li>서버컴퓨터, 네트워크, 방화벽, 전력 등에 대한 고려를 하지 않고 서비스 운영에만 집중할 수 있다.</li></ul><h2 id="SaaS-Software-as-a-Service"><a href="#SaaS-Software-as-a-Service" class="headerlink" title="SaaS(Software as a Service)"></a>SaaS(Software as a Service)</h2><p>인터넷을 통해 소프트웨어(완제품)을 제공하는 방법이다. 구글 드라이브, N드라이브, 구글 DOCS 등.</p><p>예를 들어, 구글 DOCS처럼 다른 컴퓨터에서도 쉽게 작업을 하며 다른사람과 실시간 공유작업도 가능하다.</p><h2 id="IaaS-Infrastructure-as-a-Service"><a href="#IaaS-Infrastructure-as-a-Service" class="headerlink" title="IaaS(Infrastructure as a Service)"></a>IaaS(Infrastructure as a Service)</h2><p>인터넷을 통해 인프라를 제공(서버와 저장소)한다. 빈 방을 준다고 생각하면 된다.</p><p>특정 클라우드에 종속되지 않는 대신 운영비가 상승한다. 또한 이식성이 좋다.</p><p>ex) AWS의 EC2, NCP 등이 있다.</p><h2 id="PaaS-Platform-as-a-Service"><a href="#PaaS-Platform-as-a-Service" class="headerlink" title="PaaS(Platform as a Service)"></a>PaaS(Platform as a Service)</h2><p>인터넷을 통해 플랫폼을 제공한다. 빌트인 방을 제공한다. 운영비 절감할 수 있고 모니터링, CI&#x2F;CD 제공된다.</p><p>하지만, 하나의 서버에 여러가지 서비스를 설치할 수 없어서 IaaS보다는 유연하지 않고 플랫폼에 종속된다.</p><p>ex) heroku: 자유롭게 클릭 몇번으로 여러가지 서비스 설치 가능</p><h3 id="PaaS-vs-IaaS"><a href="#PaaS-vs-IaaS" class="headerlink" title="PaaS vs IaaS"></a>PaaS vs IaaS</h3><h4 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h4><ul><li>유연하지 않고 플랫폼에 종속된다.</li><li>설치가 쉽다.</li><li>이식성이 낮다.<ul><li>각 서비스가 각자의 서버에서 동작하고 각각의 서버를 따로 연결해줘야하기 때문에…</li></ul></li><li>운영비 효율 좋다.</li></ul><h4 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h4><ul><li>유연하고 플랫폼에 종속되지 않는다.</li><li>설치가 어렵다.</li><li>이식성이 높다.<ul><li>반면 IaaS는 빈 방(서버)를 그대로 이식하면 되기에 이식성이 높다.</li></ul></li><li>운영비 효율 낮다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;클라우드&quot;&gt;&lt;a href=&quot;#클라우드&quot; class=&quot;headerlink&quot; title=&quot;클라우드&quot;&gt;&lt;/a&gt;클라우드&lt;/h1&gt;&lt;p&gt;클라우드란, 인터넷을 통해 접근할 수 있는 서버와 그 안에서 구동되는 소프트웨어, DB를 의미한다.&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
    <category term="클라우드" scheme="https://loco9939.github.io/tags/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C/"/>
    
    <category term="SaaS" scheme="https://loco9939.github.io/tags/SaaS/"/>
    
    <category term="IaaS" scheme="https://loco9939.github.io/tags/IaaS/"/>
    
    <category term="PaaS" scheme="https://loco9939.github.io/tags/PaaS/"/>
    
  </entry>
  
</feed>
