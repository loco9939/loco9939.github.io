<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Loco&#39;s Dev Blog</title>
  
  <subtitle>Frontend Developer</subtitle>
  <link href="https://loco9939.github.io/atom.xml" rel="self"/>
  
  <link href="https://loco9939.github.io/"/>
  <updated>2023-03-25T14:53:19.420Z</updated>
  <id>https://loco9939.github.io/</id>
  
  <author>
    <name>loco9939</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vite 배포 후 이미지가 안 불러와진 경우</title>
    <link href="https://loco9939.github.io/2023/03/25/Daily/Vite-%EB%B0%B0%ED%8F%AC-%ED%9B%84-%EC%9D%B4%EB%AF%B8%EC%A7%80%EA%B0%80-%EC%95%88-%EB%B6%88%EB%9F%AC%EC%99%80%EC%A7%84-%EA%B2%BD%EC%9A%B0/"/>
    <id>https://loco9939.github.io/2023/03/25/Daily/Vite-%EB%B0%B0%ED%8F%AC-%ED%9B%84-%EC%9D%B4%EB%AF%B8%EC%A7%80%EA%B0%80-%EC%95%88-%EB%B6%88%EB%9F%AC%EC%99%80%EC%A7%84-%EA%B2%BD%EC%9A%B0/</id>
    <published>2023-03-25T14:40:24.000Z</published>
    <updated>2023-03-25T14:53:19.420Z</updated>
    
    <content type="html"><![CDATA[<p>이번에 프로젝트를 진행하다가 아이콘을 사용하기 위해 svg 파일을 css <code>background:url()</code>로 불러와서 사용한 적이 있다.</p><p>그런데 로컬환경에서는 제대로 불러와지던 svg 파일들이 build를 하고 난 후, 확인해보니 불러와지지 않는 것을 확인하였다.</p><p>그래서 찾아보니 Vite에서는 다음 asset을 가져오기 위해 2가지 방법을 사용한다고 한다.</p><h1 id="Vite에서-assets-가져오기"><a href="#Vite에서-assets-가져오기" class="headerlink" title="Vite에서 assets 가져오기"></a>Vite에서 assets 가져오기</h1><h2 id="1-URL을-통해-가져오기"><a href="#1-URL을-통해-가져오기" class="headerlink" title="1. URL을 통해 가져오기"></a>1. URL을 통해 가져오기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> imgUrl <span class="keyword">from</span> <span class="string">&quot;./img.png&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;hero-img&quot;</span>).<span class="property">src</span> = imgUrl;</span><br></pre></td></tr></table></figure><ul><li>Webpack의 file-loader와 비슷한데, 차이점이 있다면 Vite는 절대경로와 상대 경로 둘 다 사용가능하다.</li><li>일반적인 이미지, 미디어, 폰트 파일 타입은 자동으로 asset 목록에 포함된다.</li></ul><h2 id="2-public-디렉터리에서-가져오기"><a href="#2-public-디렉터리에서-가져오기" class="headerlink" title="2. public 디렉터리에서 가져오기"></a>2. public 디렉터리에서 가져오기</h2><ul><li>robots.txt 같이 소스 코드에서 참조하지 않는 asset</li><li>해싱 없이 항상 같은 이름을 갖는 asset</li><li>URL을 얻기 위해 굳이 import 할 필요가 없는 asset</li></ul><p>위 3가지의 경우에는 public 디렉터리에 asset을 위치시킨다. 이곳에 위치한 asset은 개발 시 <code>/</code> 경로에, 배포시에는 <code>dist</code> 디렉터리에 위치한다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.arrowDown</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/assets/img/Arrow.svg&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>public</code> 디렉터리에 있는 asset을 가져올 경우에는 항상 루트 기준으로 하는 절대경로에서 가져와야한다. <code>(public/Arrow.svg</code> asset은 소스 코드에서는 <code>/Arrow.svg</code>으로 접근 가능하다.)</li><li><code>public</code> 디렉터리에 있는 asset은 JavaScript로 가져올 수 없다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;이번에 프로젝트를 진행하다가 아이콘을 사용하기 위해 svg 파일을 css &lt;code&gt;background:url()&lt;/code&gt;로 불러와서 사용한 적이 있다.&lt;/p&gt;
&lt;p&gt;그런데 로컬환경에서는 제대로 불러와지던 svg 파일들이 build를 하고 난</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="vite" scheme="https://loco9939.github.io/tags/vite/"/>
    
  </entry>
  
  <entry>
    <title>Recoil에 들어가기 전...</title>
    <link href="https://loco9939.github.io/2023/03/23/Daily/Recoil%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%A0%84/"/>
    <id>https://loco9939.github.io/2023/03/23/Daily/Recoil%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%A0%84/</id>
    <published>2023-03-23T13:31:34.000Z</published>
    <updated>2023-03-23T13:54:57.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="상태란"><a href="#상태란" class="headerlink" title="상태란?"></a>상태란?</h1><p>상태(state)는 애플리케이션의 작동 방식을 설명하는 모든 데이터를 말한다. 상태 관리는 시간의 흐름에 따라 상태가 변경되는 방식이다.</p><p>상태 관리를 위해서는 다음 기능이 필요하다.</p><ul><li>초기값(initial Value)을 저장할 수 있어야 한다.</li><li>현재 값(Current Value)을 읽을 수 있어야 한다.</li><li>값을 업데이트 할 수 있어야 한다.</li></ul><h2 id="React-상태관리의-한계"><a href="#React-상태관리의-한계" class="headerlink" title="React 상태관리의 한계"></a>React 상태관리의 한계</h2><ol><li><p>컴포넌트 상태는 연관된 상위 컴포넌트까지 끌어올려야 공유가 가능하고 이 과정에서 Props Drilling 이슈가 발생하고 불필요한 리렌더링 발생한다. <span style="color:red">(성능저하)</span></p></li><li><p>Context로 Props Drilling 이슈 해결할 수 있지만, <strong>Context는 단일 값만 저장할 수 있고 여러 값들의 집합을 담기가 어렵다.</strong></p></li><li><p>React의 Context, Props 만으로는 최상단에서 최하단 까지의 state 코드 분리가 어렵다.</p></li></ol><h2 id="Recoil-장점"><a href="#Recoil-장점" class="headerlink" title="Recoil 장점"></a>Recoil 장점</h2><h3 id="유연한-상태-공유"><a href="#유연한-상태-공유" class="headerlink" title="유연한 상태 공유"></a>유연한 상태 공유</h3><p>Redux처럼 복잡한 과정이 없다. 간단한 get&#x2F;set 인터페이스를 사용해 상태 공유가 쉽다.</p><h3 id="파생된-상태"><a href="#파생된-상태" class="headerlink" title="파생된 상태"></a>파생된 상태</h3><p>데이터는 간단하고 또 안전하게 상태나 다른 파생된 데이터로부터 파생될 수 있다. 또한, 상태에 접근하는 방법과 동일하게 파생된 상태에 접근 가능하다.</p><p>파생된 상태는 동기, 비동기 처리가 가능하다.</p><h3 id="광범위한-앱-상태-관찰"><a href="#광범위한-앱-상태-관찰" class="headerlink" title="광범위한 앱 상태 관찰"></a>광범위한 앱 상태 관찰</h3><p>Recoil 상태의 전체 또는 일부의 상태를 읽거나 상태가 변경된 것을 감지할 수 있다. 앱의 상태를 유지할 수도 있고 다시 수화(Hydration)하는 기능을 제공한다.</p><h3 id="비교적-낮은-러닝-커브"><a href="#비교적-낮은-러닝-커브" class="headerlink" title="비교적 낮은 러닝 커브"></a>비교적 낮은 러닝 커브</h3><p>Recoil은 React API와 유사하여 Redux에 비해 쉽고 Recoil은 기본적으로 비동기 처리 기능을 가진다.</p><h2 id="Recoil-핵심-개념"><a href="#Recoil-핵심-개념" class="headerlink" title="Recoil 핵심 개념"></a>Recoil 핵심 개념</h2><h3 id="1-atoms"><a href="#1-atoms" class="headerlink" title="1. atoms"></a>1. atoms</h3><ul><li>atoms은 공유 상태</li><li>컴포넌트가 구독할 수 있는 상태 단위</li></ul><p>atom은 상태단위이며 구독과 업데이트가 가능하다. atom이 업데이트되면 구독중인 컴포넌트는 새 값을 반영해 다시 렌더링된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> authUserState = <span class="title function_">atom</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&quot;authUserState&quot;</span>,</span><br><span class="line">  <span class="attr">defualt</span>: <span class="literal">null</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>atom은 고유한 key를 가져야 한다.</li><li>default 속성으로 초깃값 설정한다.</li></ul><p>컴포넌트에서 atom을 읽거나 쓰려면 useRecoilState 훅을 사용한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SignIn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [authUser] = <span class="title function_">useRecoilState</span>(authUserState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    !authUser ? <span class="language-xml"><span class="tag">&lt;<span class="name">SignInForm</span> /&gt;</span></span> : <span class="language-xml"><span class="tag">&lt;<span class="name">Browse</span> /&gt;</span></span>;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>뿐만 아니라 상태 업데이트를 위한 업데이트 함수만 추출할 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SignInButton</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [, setAuthUser] = <span class="title function_">useRecoilState</span>(authUserState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSignIn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="title function_">setAuthUser</span>(&#123; name, email &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleSignIn&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      로그인</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-selectors"><a href="#2-selectors" class="headerlink" title="2. selectors"></a>2. selectors</h3><p>selector는 atom이나 다른 selector를 입력받아 파생된 상태를 생성하는 순수함수이다. <strong>상위의 atom, selector가 업데이트되면 하위의 selector도 다시 실행된다.</strong> 컴포넌트는 atom과 마찬가지로 selector가 변경되면 다시 렌더링된다.</p><p>최소한의 상태만 atom에 저장하고 selector로 파생된 상태를 효과적으로 계산하여 불필요한 상태 보존을 방지한다.</p><p>selector는 어떤 컴포넌트가 필요로하는지, 어떤 상태에 의존하는지 추적하므로 함수적인 접근 방식을 매우 효율적으로 만든다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> authUserNameState = <span class="title function_">selector</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&quot;authUserNameState&quot;</span>,</span><br><span class="line">  <span class="attr">get</span>:(&#123; get &#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> authUser = <span class="title function_">get</span>(authUserState);</span><br><span class="line">    <span class="keyword">return</span> authUser.<span class="property">name</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>get 메서드 내부의 <code>get</code>함수는 atom 또는 다른 selector를 전달받을 수 있다. </li><li>전달받게 되면 자동적으로 종속 관계가 생성되며 참조했던 다른 atom, selector가 업데이트 되면 다시 실행된다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;상태란&quot;&gt;&lt;a href=&quot;#상태란&quot; class=&quot;headerlink&quot; title=&quot;상태란?&quot;&gt;&lt;/a&gt;상태란?&lt;/h1&gt;&lt;p&gt;상태(state)는 애플리케이션의 작동 방식을 설명하는 모든 데이터를 말한다. 상태 관리는 시간의 흐름에 따라 상태</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="Recoil" scheme="https://loco9939.github.io/tags/Recoil/"/>
    
  </entry>
  
  <entry>
    <title>리액트 접근성 높이는 모달 구현하기</title>
    <link href="https://loco9939.github.io/2023/03/21/React/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%A0%91%EA%B7%BC%EC%84%B1-%EB%86%92%EC%9D%B4%EB%8A%94-%EB%AA%A8%EB%8B%AC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/21/React/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%A0%91%EA%B7%BC%EC%84%B1-%EB%86%92%EC%9D%B4%EB%8A%94-%EB%AA%A8%EB%8B%AC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-21T11:09:51.000Z</published>
    <updated>2023-03-21T14:23:10.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="createPortal-사용하여-접근성-높인-모달-구현하기"><a href="#createPortal-사용하여-접근성-높인-모달-구현하기" class="headerlink" title="createPortal 사용하여 접근성 높인 모달 구현하기"></a>createPortal 사용하여 접근성 높인 모달 구현하기</h1><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Modal.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPortal &#125; <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Modal</span>(<span class="params">&#123; onClick &#125;: &#123; onClick: () =&gt; <span class="built_in">void</span> &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalClose</span> = (<span class="params">e: KeyboardEvent</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">key</span> !== <span class="string">&quot;Escape&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">onClick</span>();</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`position: fixed; top: -<span class="subst">$&#123;<span class="variable language_">window</span>.scrollY&#125;</span>px`</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> scrollY = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">top</span>;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`position: &quot;&quot;; top: &quot;&quot;;`</span>;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="built_in">parseInt</span>(scrollY || <span class="string">&quot;0&quot;</span>) * -<span class="number">1</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleModalClose);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleModalClose);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">createPortal</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">article</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-modal</span>=<span class="string">&quot;true&quot;</span> <span class="attr">className</span>=<span class="string">&quot;Dialog&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>React 포털로 연 다이얼로그(with 모달)<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__body&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>여기가 React 앱 밖의 세상인가요?!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;closeButton&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">aria-label</span>=<span class="string">&quot;모달 다이얼로그 닫기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title</span>=<span class="string">&quot;모달 다이얼로그 닫기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">width</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">height</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">fill-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Dialog__dim&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>,</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;modal&quot;</span>) <span class="keyword">as</span> <span class="title class_">HTMLElement</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Modal</span>;</span><br></pre></td></tr></table></figure><ul><li>createPortal로 root 태그가 아닌 새로운 id가 modal인 태그에 modal을 생성하였다.</li><li>Esc 키를 눌러 모달을 끌 수 있게 하였다.</li><li>모달이 열려있을 때, 모달 뒤의 배경이 스크롤되지 않도록 하였다.</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Modal</span> <span class="keyword">from</span> <span class="string">&quot;./Modal&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ModalBtn</span> <span class="keyword">from</span> <span class="string">&quot;./ModalBtn&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [modalOpen, setModalOpen] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalOpen</span> = (<span class="params"></span>) =&gt; <span class="title function_">setModalOpen</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleModalClose</span> = (<span class="params"></span>) =&gt; <span class="title function_">setModalOpen</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ModalBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;handleModalOpen&#125;</span> <span class="attr">modalOpen</span>=<span class="string">&#123;modalOpen&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;modalOpen &amp;&amp; <span class="tag">&lt;<span class="name">Modal</span> <span class="attr">onClick</span>=<span class="string">&#123;handleModalClose&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><ul><li>ModalBtn을 클릭하여 모달을 열 수 있게한다.</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ModalBtn.tsx</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ModalBtn</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  onClick,</span></span><br><span class="line"><span class="params">  modalOpen,</span></span><br><span class="line"><span class="params">&#125;: &#123;</span></span><br><span class="line"><span class="params">  onClick: () =&gt; <span class="built_in">void</span>;</span></span><br><span class="line"><span class="params">  modalOpen: <span class="built_in">boolean</span>;</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;openDialogButton&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">aria-haspopup</span>=<span class="string">&quot;dialog&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">aria-label</span>=<span class="string">&quot;모달 다이얼로그 열기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">title</span>=<span class="string">&quot;모달 다이얼로그 열기&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">tabIndex</span>=<span class="string">&#123;modalOpen</span> ? <span class="attr">-1</span> <span class="attr">:</span> <span class="attr">0</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height</span>=<span class="string">&quot;24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">fill-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">clip-rule</span>=<span class="string">&quot;evenodd&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 4h-13v18h20v-11h1v12h-22v-20h14v1zm10 5h-1v-6.293l-11.646 11.647-.708-.708 11.647-11.646h-6.293v-1h8v8z&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ModalBtn</span>;</span><br></pre></td></tr></table></figure><ul><li>ModalBtn에 모달 상태를 전달하여 모달이 열려있다면 모달 배경에 포커스가 가지 않도록 하였다.</li></ul><blockquote><p>배경 요소에 모든 focus 요소에 tabIndex 속성을 설정해줘야하는 번거로움이 있다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;createPortal-사용하여-접근성-높인-모달-구현하기&quot;&gt;&lt;a href=&quot;#createPortal-사용하여-접근성-높인-모달-구현하기&quot; class=&quot;headerlink&quot; title=&quot;createPortal 사용하여 접근성 높인 모달 </summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
    <category term="모달" scheme="https://loco9939.github.io/tags/%EB%AA%A8%EB%8B%AC/"/>
    
    <category term="createPortal" scheme="https://loco9939.github.io/tags/createPortal/"/>
    
  </entry>
  
  <entry>
    <title>Emotion Styled Components에서 props 지정하기</title>
    <link href="https://loco9939.github.io/2023/03/20/Daily/Emotion-Styled-Components%EC%97%90%EC%84%9C-props-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/20/Daily/Emotion-Styled-Components%EC%97%90%EC%84%9C-props-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-20T13:57:22.000Z</published>
    <updated>2023-03-20T14:11:20.134Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;@emotion/styled&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(props) =&gt; (props.isClicked ? <span class="string">&quot;green&quot;</span> : <span class="string">&quot;white&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Btn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">isClicked</span>&gt;</span>선택하기<span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>위와 같이 사용하게 되면 StyledButton 에 커스텀 props를 타입 선언을 해주지 않았기 때문에 에러를 발생한다.</li></ul><p>이를 해결하기 위해 커스텀 props 타입을 단언해주면된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;@emotion/styled&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span>&lt;&#123; <span class="attr">isClicked</span>: boolean &#125;&gt;<span class="string">`</span></span><br><span class="line"><span class="string">  width: 100px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(props) =&gt; (props.isClicked ? <span class="string">&quot;green&quot;</span> : <span class="string">&quot;white&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Btn</span>(<span class="params">&#123; isClicked &#125;: &#123; isClicked: boolean &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">isClicked</span>=<span class="string">&#123;isClicked&#125;</span>&gt;</span>선택하기<span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="emotion" scheme="https://loco9939.github.io/tags/emotion/"/>
    
    <category term="styled components" scheme="https://loco9939.github.io/tags/styled-components/"/>
    
    <category term="typescript" scheme="https://loco9939.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>image sprite 실전 사용기</title>
    <link href="https://loco9939.github.io/2023/03/20/Daily/image-sprite-%EC%8B%A4%EC%A0%84-%EC%82%AC%EC%9A%A9%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/20/Daily/image-sprite-%EC%8B%A4%EC%A0%84-%EC%82%AC%EC%9A%A9%EA%B8%B0/</id>
    <published>2023-03-20T13:40:05.000Z</published>
    <updated>2023-03-20T13:52:47.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image-sprite-실전-사용기"><a href="#image-sprite-실전-사용기" class="headerlink" title="image sprite 실전 사용기"></a>image sprite 실전 사용기</h1><p>기존 프로젝트에서는 돋보기 아이콘을 불러올 때, png 파일을 통해서 각각 한개씩 불러왔다.</p><p>이렇게 되면 돋보기 이미지는 상태에 따라 default, focus, disabled 총 3가지 상태를 가진 이미지가 있기 때문에 이미지를 3번 불러와야한다.</p><p>하지만 이미지 스프라이트를 사용하면, image sprite를 사용하여 3가지 상태의 이미지를 svg 파일 한 곳에 넣어두고 이를 배경이미지로 불러와서 원하는 위치의 이미지에 position을 주어 보여주도록 하였다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;img_navSprites.png&quot;</span>) <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>이미지를 배경으로 불러온 뒤 left, top 속성으로 배치한다.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.png&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>src 속성을 비워두게 되면 img 태그에 테두리가 생기게 되는데, 이는 제거하려해도 제거할 수가 없다. (border, outline, padding, margin 여러 방법을 써봐도 안됐다.)</li></ul><p>그래서 src 속성을 비워두지 않기 위해 투명한 이미지 경로를 넣어준 것이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;img_navSprites.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 또는 img 태그 대신 i 태그 사용하기</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">className</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>오늘 프로젝트를 진행하면서 icon을 불러오는 용도로 사용했기 때문에 img 태그 대신 i 태그를 사용하여 불러오니 src 속성없이도 불러올 수 있어서 편리하였다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image-sprite-실전-사용기&quot;&gt;&lt;a href=&quot;#image-sprite-실전-사용기&quot; class=&quot;headerlink&quot; title=&quot;image sprite 실전 사용기&quot;&gt;&lt;/a&gt;image sprite 실전 사용기&lt;/h1&gt;&lt;p&gt;기존</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="image sprite" scheme="https://loco9939.github.io/tags/image-sprite/"/>
    
  </entry>
  
  <entry>
    <title>리액트에서 이미지 넣는 방법</title>
    <link href="https://loco9939.github.io/2023/03/20/React/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%84%A3%EB%8A%94-%EB%B0%A9%EB%B2%95/"/>
    <id>https://loco9939.github.io/2023/03/20/React/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%84%A3%EB%8A%94-%EB%B0%A9%EB%B2%95/</id>
    <published>2023-03-20T13:23:51.000Z</published>
    <updated>2023-03-20T13:38:53.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="리액트에서-이미지-넣기"><a href="#리액트에서-이미지-넣기" class="headerlink" title="리액트에서 이미지 넣기"></a>리액트에서 이미지 넣기</h1><h2 id="1-import-구문-사용하기"><a href="#1-import-구문-사용하기" class="headerlink" title="1. import 구문 사용하기"></a>1. import 구문 사용하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Logo</span> <span class="keyword">from</span> <span class="string">&quot;./assets/img/Logo.png&quot;</span>;</span><br></pre></td></tr></table></figure><p>컴포넌트에서 import 구문을 사용하여 이미지를 불러올 수 있다.</p><p>이렇게 불러온 이미지는 img 태그의 src 속성에 할당한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;Logo&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;Logo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>단, import는 React가 처리하지 않는다는 것을 명심해야한다. 이는 Webpack이나 vite같은 번들러들에 의해 처리된다.</p></blockquote><h2 id="2-public-폴더에-이미지-불러오기"><a href="#2-public-폴더에-이미지-불러오기" class="headerlink" title="2. public 폴더에 이미지 불러오기"></a>2. public 폴더에 이미지 불러오기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public</span><br><span class="line">|__images</span><br><span class="line">    |__logo.png</span><br></pre></td></tr></table></figure><p>다음과 같이 public 폴더에 images를 담아두고 public 폴더를 절대경로로 이미지를 불러올 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Logo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>public으로 이미지를 불러오게 되면 브라우저에서 <a href="http://localhost:3000/images/logo.png">http://localhost:3000/images/logo.png</a> 경로로 해당 파일을 오픈할 수 있다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;리액트에서-이미지-넣기&quot;&gt;&lt;a href=&quot;#리액트에서-이미지-넣기&quot; class=&quot;headerlink&quot; title=&quot;리액트에서 이미지 넣기&quot;&gt;&lt;/a&gt;리액트에서 이미지 넣기&lt;/h1&gt;&lt;h2 id=&quot;1-import-구문-사용하기&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
  </entry>
  
  <entry>
    <title>컴포넌트 구성과 상태관리 전략</title>
    <link href="https://loco9939.github.io/2023/03/18/React/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%96%B4%EB%96%A4-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/"/>
    <id>https://loco9939.github.io/2023/03/18/React/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%96%B4%EB%96%A4-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</id>
    <published>2023-03-18T00:16:28.000Z</published>
    <updated>2023-03-18T00:48:55.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="데이터와-디자인을-컴포넌트로-구성하기"><a href="#데이터와-디자인을-컴포넌트로-구성하기" class="headerlink" title="데이터와 디자인을 컴포넌트로 구성하기"></a>데이터와 디자인을 컴포넌트로 구성하기</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1920</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;사과&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1640</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;두리안&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;과일&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">2480</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;아보카도&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1700</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;시금치&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">2800</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;호박&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;채소&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1330</span><span class="punctuation">,</span> <span class="attr">&quot;stocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;완도콩&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/comp/design.png" alt="design"></p><p>위와 같이 데이터와 디자인 시안이 제시되었을 때, 컴포넌트를 어떻게 구성하는 것이 좋을지 생각해본다.</p><p><strong>UI와 데이터는 주로 동일한 모양을 갖기 때문에 데이터 구조와 컴포넌트 구조가 자연스럽게 매핑된다.</strong></p><p>그러므로 다음과 같이 컴포넌트를 구성할 수 있을 것이다.</p><p><img src="/../../images/comp/components.png" alt="component"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FilterableProductTable</span><br><span class="line"> ├── SearchBar</span><br><span class="line"> └── ProductTable</span><br><span class="line">      ├── ProductCategoryRow</span><br><span class="line">      └── ProductRow</span><br></pre></td></tr></table></figure><p>폴더 구조는 위와 같이 구성할 수 있을 것이다.</p><blockquote><p>이상적인 컴포넌트 설계는 한가지만 책임하는 것이다. 만약 한가지 이상의 처리가 필요하다면 컴포넌트를 더 작은 컴포넌트로 나눠야한다.</p></blockquote><h2 id="React-정적-컴포넌트-구성"><a href="#React-정적-컴포넌트-구성" class="headerlink" title="React 정적 컴포넌트 구성"></a>React 정적 컴포넌트 구성</h2><p>컴포넌트에 대한 구상이 끝났으므로 React로 앱을 빌드해보자.</p><p>이 때 가장 간단한 접근법은 사용자와의 상호작용은 고려하지 않고 데이터 모델에서 UI를 렌더링 하는 버전으로 작성하는 것이다.</p><p>데이터 모델을 렌더링하는 앱을 만들고자 한다면 props와 state를 사용하고 싶을 것이다. 하지만 <span style="color:red;">현재 단계에서는 state를 사용하지 않는다.</span><br>왜냐하면 state는 사용자와 상호작용할 때 사용하기 때문에 아직 단계가 아니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">PRODUCTS</span> <span class="keyword">from</span> <span class="string">&quot;../../api/products.json&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterableProductTable</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> products = [...<span class="variable constant_">PRODUCTS</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;filterableProductTable&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SearchBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProductTable</span> <span class="attr">products</span>=<span class="string">&#123;products&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterableProductTable</span>;</span><br></pre></td></tr></table></figure><blockquote><p>정적 빌드된 컴포넌트는 JSX만을 반환한다. 그리고 컴포넌트 트리 최상위 컴포넌트에서 데이터 모델을 하위 props로 전달하는 “단방향 데이터 흐름”을 구현한다.</p></blockquote><h2 id="컴포넌트-UI-대화형으로-만들기"><a href="#컴포넌트-UI-대화형으로-만들기" class="headerlink" title="컴포넌트 UI 대화형으로 만들기"></a>컴포넌트 UI 대화형으로 만들기</h2><p>UI를 대화형으로 만들려면 사용자가 기본 데이터를 변경할 수 있도록 해야한다. 이러한 상호작용이 필요할 때, state를 사용한다.</p><p><strong>state는 앱이 기억하고 변경해야 할 데이터의 최소 집합이라고 생각할 수 있다.</strong></p><p>이 때 상태를 구성하는 가장 중요한 원칙은 DRY(Don’t Repeat Yourself)이다. state는 최소한으로만 필요해야하며 나머지는 필요할 때 다시 고민한다.</p><p>그렇다면 위 컴포넌트에서는 state는 무엇이 될 수 있을까?</p><h3 id="state와-props-구분하기"><a href="#state와-props-구분하기" class="headerlink" title="state와 props 구분하기"></a>state와 props 구분하기</h3><h4 id="1-시간이-지남에도-변경이-없다면"><a href="#1-시간이-지남에도-변경이-없다면" class="headerlink" title="1. 시간이 지남에도 변경이 없다면?"></a>1. 시간이 지남에도 변경이 없다면?</h4><p>&#x3D;&gt; 이는 state가 아니다. state는 사용자와 상호작용해야하는 요소이기 때문이다.</p><h4 id="2-props를-통해-상위-컴포넌트로-부터-전달될-수-있다면"><a href="#2-props를-통해-상위-컴포넌트로-부터-전달될-수-있다면" class="headerlink" title="2. props를 통해 상위 컴포넌트로 부터 전달될 수 있다면?"></a>2. props를 통해 상위 컴포넌트로 부터 전달될 수 있다면?</h4><p>&#x3D;&gt; 이는 state가 아니다.</p><h4 id="3-컴포넌트의-기존-state-또는-props를-기반으로-계산할-수-있다면"><a href="#3-컴포넌트의-기존-state-또는-props를-기반으로-계산할-수-있다면" class="headerlink" title="3. 컴포넌트의 기존 state 또는 props를 기반으로 계산할 수 있다면?"></a>3. 컴포넌트의 기존 state 또는 props를 기반으로 계산할 수 있다면?</h4><p>&#x3D;&gt; 이는 state가 아니다.</p><p>그러므로 위 예시에서 state는 검색 텍스트 값과 체크박스 값이 될 수 있다.</p><h2 id="앱-상태-관리-하기"><a href="#앱-상태-관리-하기" class="headerlink" title="앱 상태 관리 하기"></a>앱 상태 관리 하기</h2><p>자 이제 앱이 가지는 최소한의 state를 파악했다. 그러면 이 state를 변경하고 소유하는 컴포넌트는 누가 할 것인지를 정해줘야한다.</p><p>React는 단방향 데이터 흐름을 사용하기 때문에 상위 컴포넌트에서 하위 컴포넌트로 데이터가 전달된다.</p><h3 id="컴포넌트-상태-관리-전략"><a href="#컴포넌트-상태-관리-전략" class="headerlink" title="컴포넌트 상태 관리 전략"></a>컴포넌트 상태 관리 전략</h3><ol><li>state를 기반으로 무언가를 렌더링하는 모든 컴포넌트 확인한다.</li><li>해당 컴포넌트와 가장 가까운 공통 상위 컴포넌트를 찾는다.</li></ol><p>이제 state를 어디서 관리할지 정해줘야한다. 경우의 수는 3가지가 있다.</p><ul><li>state를 공통 상위 컴포넌트에서 관리</li><li>state를 공통 상위 컴포넌트보다 상위에서 관리</li><li>state를 소유하는 것이 타당한 컴포넌트를 찾지 못한 경우, state를 유지하기 위한 새로운 컴포넌트 만들고 공통 상위 컴포넌트 보다 위 어딘가에 추가하여 관리</li></ul><p>위 예시에서 검색 텍스트 값과 체크박스 값이 state라고 하였다.</p><h3 id="컴포넌트-상태-관리-단계"><a href="#컴포넌트-상태-관리-단계" class="headerlink" title="컴포넌트 상태 관리 단계"></a>컴포넌트 상태 관리 단계</h3><ol><li>상태를 사용하는 컴포넌트 식별</li></ol><ul><li>SearchBar - 검색 텍스트 state 관리</li><li>ProductTable - 체크박스 유무 state 관리</li></ul><ol start="2"><li>공통 상위 컴포넌트 찾기</li></ol><p>SearchBar, ProductTable 의 공통 상위 컴포넌트는 FilterableProductTable 컴포넌트이다.</p><ol start="3"><li>state가 있는 위치 결정</li></ol><p>공통 상위 컴포넌트인 FilterableProductTable 컴포넌트에서 관리한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">PRODUCTS</span> <span class="keyword">from</span> <span class="string">&quot;../../api/products.json&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchBar</span> <span class="keyword">from</span> <span class="string">&quot;./SearchBar/SearchBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ProductTable</span> <span class="keyword">from</span> <span class="string">&quot;./ProductTable/ProductTable&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterableProductTable</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> products = [...<span class="variable constant_">PRODUCTS</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [searchText, setSearchText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> [inStockOnly, setInStockOnly] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handeChangeSearchText</span> = (<span class="params">newSearchText: string</span>) =&gt;</span><br><span class="line">    <span class="title function_">setSearchText</span>(newSearchText);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handeChangeInStockOnly</span> = (<span class="params">inStockOnlyState: boolean</span>) =&gt;</span><br><span class="line">    <span class="title function_">setInStockOnly</span>(inStockOnlyState);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;filterableProductTable&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SearchBar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">searchText</span>=<span class="string">&#123;searchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">inStockOnly</span>=<span class="string">&#123;inStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChangeSearchText</span>=<span class="string">&#123;handeChangeSearchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChangeInStockOnly</span>=<span class="string">&#123;handeChangeInStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProductTable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">products</span>=<span class="string">&#123;products&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">searchText</span>=<span class="string">&#123;searchText&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">inStockOnly</span>=<span class="string">&#123;inStockOnly&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterableProductTable</span>;</span><br></pre></td></tr></table></figure><p>해당 컴포넌트에서 state를 관리하고 props로 전달하는 것은 완료했으니 state를 관리하는 컴포넌트에서 state 변경함수까지 props 전달하여 사용자가 UI를 업데이트 할 수 있도록 구현해주면 완성이다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;데이터와-디자인을-컴포넌트로-구성하기&quot;&gt;&lt;a href=&quot;#데이터와-디자인을-컴포넌트로-구성하기&quot; class=&quot;headerlink&quot; title=&quot;데이터와 디자인을 컴포넌트로 구성하기&quot;&gt;&lt;/a&gt;데이터와 디자인을 컴포넌트로 구성하기&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="React" scheme="https://loco9939.github.io/categories/React/"/>
    
    
    <category term="상태관리전략" scheme="https://loco9939.github.io/tags/%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC%EC%A0%84%EB%9E%B5/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 19일차&gt; Accordion</title>
    <link href="https://loco9939.github.io/2023/03/17/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-19%EC%9D%BC%EC%B0%A8-Accordion/"/>
    <id>https://loco9939.github.io/2023/03/17/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-19%EC%9D%BC%EC%B0%A8-Accordion/</id>
    <published>2023-03-17T12:29:04.000Z</published>
    <updated>2023-03-17T13:13:49.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Accordion"><a href="#Accordion" class="headerlink" title="Accordion"></a>Accordion</h1><p><img src="/../../images/CSS/accordion/default.png" alt="default"></p><p><img src="/../../images/CSS/accordion/active.png" alt="active"></p><h2 id="1-HTML-마크업-설계"><a href="#1-HTML-마크업-설계" class="headerlink" title="1. HTML 마크업 설계"></a>1. HTML 마크업 설계</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;accordion&quot;</span>&gt;</span>Section 3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-CSS-스타일링"><a href="#2-CSS-스타일링" class="headerlink" title="2. CSS 스타일링"></a>2. CSS 스타일링</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.accordion</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */</span></span><br><span class="line"><span class="selector-class">.accordion</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Style the accordion panel. <span class="doctag">Note:</span> hidden by default */</span></span><br><span class="line"><span class="selector-class">.panel</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">transition</span>: max-height <span class="number">0.4s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-React-로직"><a href="#3-React-로직" class="headerlink" title="3. React 로직"></a>3. React 로직</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Accordion.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./styles/main.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Accordion</span>(<span class="params">&#123; title, info &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [showInfo, setShowInfo] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;accordion&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setShowInfo(!showInfo)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;title&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">panel</span> $&#123;<span class="attr">showInfo</span> ? &quot;<span class="attr">active</span>&quot; <span class="attr">:</span> &quot;&quot;&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;info&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Accordion</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Accordion&quot;&gt;&lt;a href=&quot;#Accordion&quot; class=&quot;headerlink&quot; title=&quot;Accordion&quot;&gt;&lt;/a&gt;Accordion&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/../../images/CSS/accordion/defa</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="accordion" scheme="https://loco9939.github.io/tags/accordion/"/>
    
  </entry>
  
  <entry>
    <title>VSCode Remote SSH로 원격으로 코딩</title>
    <link href="https://loco9939.github.io/2023/03/17/Daily/VSCode-Remote-SSH%EB%A1%9C-%EC%9B%90%EA%B2%A9%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9/"/>
    <id>https://loco9939.github.io/2023/03/17/Daily/VSCode-Remote-SSH%EB%A1%9C-%EC%9B%90%EA%B2%A9%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9/</id>
    <published>2023-03-17T12:02:53.000Z</published>
    <updated>2023-03-17T12:27:43.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Remote-SSH로-원격-코딩하기"><a href="#Remote-SSH로-원격-코딩하기" class="headerlink" title="Remote SSH로 원격 코딩하기"></a>Remote SSH로 원격 코딩하기</h1><p>우리가 로컬에서 개발한 프로젝트를 서버 컴퓨터에서 실행하고 싶으면 어떻게 해야할까?</p><p>방법은 서버 컴퓨터에서 해당 프로젝트를 실행해주면 된다.</p><p>말로는 정말 쉬워보이지만 막상 하려고 하면 뭐부터 해야할지 모르겠다.</p><p>그래서 단계를 나눠서 도전해보자.</p><h2 id="과정"><a href="#과정" class="headerlink" title="과정"></a>과정</h2><p><img src="/../../images/Daily/remotessh/remotessh.png" alt="remotessh"></p><ol><li>우선 VSCode에서 “Remote - SSH”라는 익스텐션을 다운받는다. 해당 extension을 사용하여 서버 컴퓨터에서 원격으로 프로젝트를 실행할 것이다.</li></ol><p><img src="/../../images/Daily/remotessh/sshsetting1.png" alt="sshSettings1"></p><ol start="2"><li><p>톱니바퀴를 눌러서 config 파일을 연다.</p></li><li><p>config 파일 설정은 다음과 같다.</p></li></ol><p><img src="/../../images/Daily/remotessh/sshsetting2.png" alt="sshSetting2"></p><ul><li>Host는 원격 서버의 이름을 나타낸다.</li><li>User는 계정 이름으로 보통 “ubuntu”</li><li>ssh 파일 경로는 SSH키가 담긴 .pem 파일의 경로</li></ul><ol start="4"><li>이제 VSCode를 사용하여 서버를 원격으로 조종할 수 있다.</li></ol><p><img src="/../../images/Daily/remotessh/sshsettting3.png" alt="sshSetting3"></p><p>우측에 새창으로 열기를 클릭하면 서버환경에서 VSCode가 열리게 될 것이다.</p><p>이 후 VSCode에서 터미널을 켜서 git clone을 하여 github 레포지토리를 클론한 다음</p><p>프로젝트를 실행하면 원격으로 서버 컴퓨터에서 프로젝트를 실행할 수 있게된다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Remote-SSH로-원격-코딩하기&quot;&gt;&lt;a href=&quot;#Remote-SSH로-원격-코딩하기&quot; class=&quot;headerlink&quot; title=&quot;Remote SSH로 원격 코딩하기&quot;&gt;&lt;/a&gt;Remote SSH로 원격 코딩하기&lt;/h1&gt;&lt;p&gt;우리</summary>
      
    
    
    
    <category term="Daily" scheme="https://loco9939.github.io/categories/Daily/"/>
    
    
    <category term="remote" scheme="https://loco9939.github.io/tags/remote/"/>
    
    <category term="ssh" scheme="https://loco9939.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 18일차&gt; form</title>
    <link href="https://loco9939.github.io/2023/03/10/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-18%EC%9D%BC%EC%B0%A8-form/"/>
    <id>https://loco9939.github.io/2023/03/10/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-18%EC%9D%BC%EC%B0%A8-form/</id>
    <published>2023-03-10T11:10:58.000Z</published>
    <updated>2023-03-10T11:26:28.493Z</updated>
    
    <content type="html"><![CDATA[<p>기본적인 HTML구조와 CSS로 다음과 같은 form을 만들 수 있다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>,</span></span><br><span class="line"><span class="language-css">    select &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#4caf50</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#45a049</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Using CSS to style an HTML Form<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/action_page.php&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fname&quot;</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;fname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;lname&quot;</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;lname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your last name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>Country<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;australia&quot;</span>&gt;</span>Australia<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;canada&quot;</span>&gt;</span>Canada<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/form/common.png" alt="commonForm"></p><h2 id="focused-Inputs"><a href="#focused-Inputs" class="headerlink" title="focused Inputs"></a>focused Inputs</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="icon-x2F-image-삽입하기"><a href="#icon-x2F-image-삽입하기" class="headerlink" title="icon&#x2F;image 삽입하기"></a>icon&#x2F;image 삽입하기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;searchicon.png&quot;</span>);</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span> <span class="number">12px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/form/icon.png" alt="icon"></p><h2 id="animated-Search-Input"><a href="#animated-Search-Input" class="headerlink" title="animated Search Input"></a>animated Search Input</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">0.4s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="textarea-사이즈-재조정-방지하기"><a href="#textarea-사이즈-재조정-방지하기" class="headerlink" title="textarea 사이즈 재조정 방지하기"></a>textarea 사이즈 재조정 방지하기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">resize</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>resize</strong> 속성을 none으로 주어 사이즈 재조정을 막는다.</li></ul><h2 id="반응형-form-만들기"><a href="#반응형-form-만들기" class="headerlink" title="반응형 form 만들기"></a>반응형 form 만들기</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">resize</span>: vertical;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">12px</span> <span class="number">12px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#04aa6d</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#45a049</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-25</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-75</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Clear floats after the columns */</span></span><br><span class="line"><span class="selector-class">.row</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.col-25</span>,</span><br><span class="line">  <span class="selector-class">.col-75</span>,</span><br><span class="line">  <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Responsive Form<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  Resize the browser window to see the effect. When the screen is less than</span><br><span class="line">  600px wide, make the two columns stack on top of each other instead of next to</span><br><span class="line">  each other.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/action_page.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fname&quot;</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;fname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;lname&quot;</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;lname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Your last name..&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>Country<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;australia&quot;</span>&gt;</span>Australia<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;canada&quot;</span>&gt;</span>Canada<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span>&gt;</span>USA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-25&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>Subject<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-75&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;subject&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;Write something..&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;height:200px&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;기본적인 HTML구조와 CSS로 다음과 같은 form을 만들 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="form" scheme="https://loco9939.github.io/tags/form/"/>
    
  </entry>
  
  <entry>
    <title>시간복잡도 연습하기</title>
    <link href="https://loco9939.github.io/2023/03/10/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/"/>
    <id>https://loco9939.github.io/2023/03/10/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</id>
    <published>2023-03-10T03:54:49.000Z</published>
    <updated>2023-03-10T10:44:03.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="반복문-시간-복잡도"><a href="#반복문-시간-복잡도" class="headerlink" title="반복문 시간 복잡도"></a>반복문 시간 복잡도</h1><p>다음 코드의 시간 복잡도를 구해보자.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">            a += i+j;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; cnt : &quot;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>처음에는 하나씩 콘솔을 찍어보면서 계산해보자.</p><ol><li>i &#x3D; 0, j는 무시;</li><li>i &#x3D; 1, j &#x3D; 0</li><li>i &#x3D; 2, j &#x3D; 0,1</li><li>i &#x3D; 3, j &#x3D; 0,1,2</li></ol><p>정사각형의 한 변의 길이가 n일 때, 정사각형의 넓이는 n^2이다.</p><p>이와 마찬가지로 시간복잡도도 해당 도형의 넓이로 구할 수 있다.</p><p>위 식을 넓이로 나타내면 j는 i를 포함하지 않고 있기 때문에 <code>n * (n - 1) % 2</code>로 나타낼 수 있다.</p><h1 id="재귀함수-시간-복잡도"><a href="#재귀함수-시간-복잡도" class="headerlink" title="재귀함수 시간 복잡도"></a>재귀함수 시간 복잡도</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, a[<span class="number">1004</span>], cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">go</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> a[l];</span><br><span class="line">    <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="built_in">go</span>(l, mid) + <span class="built_in">go</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i - <span class="number">1</span>] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum = <span class="built_in">go</span>(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;cnt: &#x27;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>시간복잡도는 어떤 로직이 몇 번 반복되었는지를 식으로 만들고 빅오표기법으로 표현하는 것이다.</strong></p><p>좀 더 자세히 말하면 <code>재귀함수의 메인로직 * 몇번 호출</code>되는지이다.</p><p>그래서 해당 go 함수가 몇번 호출되는지 직접 손코딩으로 그려보며 세어보았다.</p><p>n &#x3D; 5일 때, 9가 나오고 n &#x3D; 10일 때, 19, n &#x3D; 20일 때, 39가 나오는 것을 보고 아 시간 복잡도가 <code>2n - 1</code>이구나라는 것을 알게되었다.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; <span class="type">int</span> N, cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> N)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(N == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">solve</span>(N - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="built_in">solve</span>(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>예를 들어 n &#x3D; 3일 때, 처음 1회 실행되고 함수가 3번씩 호출되는데 만약 N이 0이아니면 또 3번씩 호출되므로 공비가 3인 등비수열로 생각할 수 있다.</p><p>따라서 등비수열의 합식이 성립한다.</p><p><img src="/../../../images/CS/DataStructure/BiOQuiz/time.png" alt="time complexity"></p><h3 id="📌-Tip"><a href="#📌-Tip" class="headerlink" title="📌 Tip"></a>📌 Tip</h3><p>함수 하나가 호출될 때 이 함수가 4번 호출된다면 &#x3D;&gt; <code>4^n</code></p><p>함수 하나가 호출될 때, 이 함수가 2번 호출된다면 &#x3D;&gt; <code>2^n</code></p><h1 id="로그-지수-역함수의-시간-복잡도"><a href="#로그-지수-역함수의-시간-복잡도" class="headerlink" title="로그 지수 역함수의 시간 복잡도"></a>로그 지수 역함수의 시간 복잡도</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; <span class="type">int</span> N;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, i = N;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        a += i;</span><br><span class="line">        i /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="built_in">solve</span>(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위 식에서 while문은 <code>log N + 1</code>의 시간복잡도를 가지고 빅오표기법으로 나타내면 <code>log N</code>이다.</p><blockquote><p><code>log N</code>은 2를 몇번 곱해서 N의 값이 될 수 있는지를 나타낸 수이다.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;반복문-시간-복잡도&quot;&gt;&lt;a href=&quot;#반복문-시간-복잡도&quot; class=&quot;headerlink&quot; title=&quot;반복문 시간 복잡도&quot;&gt;&lt;/a&gt;반복문 시간 복잡도&lt;/h1&gt;&lt;p&gt;다음 코드의 시간 복잡도를 구해보자.&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="자료구조" scheme="https://loco9939.github.io/categories/CS/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>정적 타입 시스템의 필요성</title>
    <link href="https://loco9939.github.io/2023/03/10/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1/"/>
    <id>https://loco9939.github.io/2023/03/10/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1/</id>
    <published>2023-03-10T02:53:52.000Z</published>
    <updated>2023-03-10T03:25:46.205Z</updated>
    
    <content type="html"><![CDATA[<p>개발자는 사용자에게 안정적인 서비스를 제공하기 위해 여러가지 방법을 사용한다.</p><p>정적 타입 시스템도 그 중 하나다.</p><h2 id="타입-시스템"><a href="#타입-시스템" class="headerlink" title="타입 시스템"></a>타입 시스템</h2><p>타입 시스템은 개발자가 정의한 타입을 기반으로 해당 타입을 언어와 연관시키는 메커니즘이다.</p><ul><li>동등: 두 타입이 동일할 때 적용 (number:number)</li><li>호환: 두가지 타입이 정확히 일치하지 않더라도 어느정도 호환이 되는지를 나타내는 규칙(any: number)</li><li>추론: 타입이 정의되어 있지 않지만 주변 문맥에 따라 타입이 결정되는 규칙(a&#x3D;3 일 때, a는 number)</li></ul><p>모든 언어는 타입시스템이 존재하고 동적 타입과 정적 타입으로 나뉜다.</p><h2 id="동적-타입과-정적-타입-차이"><a href="#동적-타입과-정적-타입-차이" class="headerlink" title="동적 타입과 정적 타입 차이"></a>동적 타입과 정적 타입 차이</h2><h3 id="동적-타입"><a href="#동적-타입" class="headerlink" title="동적 타입"></a>동적 타입</h3><p>런타임에 모든 변수의 유형을 결정한다. 잘못된 경우 예외 발생시킨다.</p><p>ex) PHP, JS, Python</p><h3 id="정적-타입"><a href="#정적-타입" class="headerlink" title="정적 타입"></a>정적 타입</h3><p>컴파일 타임에 모든 변수의 유형을 결정한다. 잘못된 경우 예외 발생시킨다.</p><p>ex) C, C++, Java</p><h2 id="정적-타입-시스템의-필요성"><a href="#정적-타입-시스템의-필요성" class="headerlink" title="정적 타입 시스템의 필요성"></a>정적 타입 시스템의 필요성</h2><ol><li><p>타입을 명시하여 나중에 다른 개발자가 보더라도 어떤 매개변수를 넣고 이 함수가 어떤 값을 반환하는지 명시적으로 파악 가능</p></li><li><p>어떤 함수 또는 API에 대해 여러가지의 타입으로 이루어진 값이 발생될 수 있는데, 해당 값들에 대한 대처를 “미리” 할 수 있다.</p></li><li><p>매개변수 잘못입력하거나 등의 개발자 잔실수 줄여준다.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;개발자는 사용자에게 안정적인 서비스를 제공하기 위해 여러가지 방법을 사용한다.&lt;/p&gt;
&lt;p&gt;정적 타입 시스템도 그 중 하나다.&lt;/p&gt;
&lt;h2 id=&quot;타입-시스템&quot;&gt;&lt;a href=&quot;#타입-시스템&quot; class=&quot;headerlink&quot; title=&quot;타입</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 17일차&gt; attribute selector</title>
    <link href="https://loco9939.github.io/2023/03/09/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-17%EC%9D%BC%EC%B0%A8-attribute-selector/"/>
    <id>https://loco9939.github.io/2023/03/09/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-17%EC%9D%BC%EC%B0%A8-attribute-selector/</id>
    <published>2023-03-09T12:43:31.000Z</published>
    <updated>2023-03-09T13:17:41.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="attribute"><a href="#attribute" class="headerlink" title="[attribute]"></a>[attribute]</h1><p>특정 attribute를 선택하기 위해 사용하는 선택자이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[target]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>a 태그의 target attribute가 선언된 요소를 선택한다.</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[target=<span class="string">&quot;_blank&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>attribute 값에 해당하는 요소를 선택한다.</li></ul><h2 id="정확히-특정-단어-포함하는-attribute-선택"><a href="#정확히-특정-단어-포함하는-attribute-선택" class="headerlink" title="정확히 특정 단어 포함하는 attribute 선택"></a>정확히 특정 단어 포함하는 attribute 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[title~=<span class="string">&quot;flower&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">5px</span> solid yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute~=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  All images with the title attribute containing the word &quot;flower&quot; get a yellow</span><br><span class="line">  border.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;klematis.jpg&quot;</span> <span class="attr">title</span>=<span class="string">&quot;klematis flower&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> <span class="attr">height</span>=<span class="string">&quot;113&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_flwr.gif&quot;</span> <span class="attr">title</span>=<span class="string">&quot;flower f&quot;</span> <span class="attr">width</span>=<span class="string">&quot;224&quot;</span> <span class="attr">height</span>=<span class="string">&quot;162&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img_tree.gif&quot;</span> <span class="attr">title</span>=<span class="string">&quot;tree&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;358&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/space.png"></p><ul><li>title 속성에 “flower” 단어가 포함된 요소를 선택한다.</li></ul><blockquote><p>띄어쓰기로 구분된 요소는 개별요소로 취급하짐나, 하이푼(-)으로 구분된 요소는 여기서 제외된다.</p></blockquote><h2 id="특정-단어를-포함하는-attribute-선택"><a href="#특정-단어를-포함하는-attribute-선택" class="headerlink" title="특정 단어를 포함하는 attribute 선택"></a>특정 단어를 포함하는 attribute 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class|=<span class="string">&quot;top&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute|=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;top-header&quot;</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;top-text&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;topcontent&quot;</span>&gt;</span>Are you learning CSS?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/exactValue.png" alt="include value"></p><ul><li>top이라는 단어가 포함된 요소만 선택하는 것을 확인할 수 있다. (-으로 구분할 수 있다.)</li></ul><h2 id="특정-단어로-시작하는-attribute-속성-선택"><a href="#특정-단어로-시작하는-attribute-속성-선택" class="headerlink" title="특정 단어로 시작하는 attribute 속성 선택"></a>특정 단어로 시작하는 attribute 속성 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class^=<span class="string">&quot;top&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CSS [attribute|=&quot;value&quot;] Selector<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;top-header&quot;</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;top-text&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;topcontent&quot;</span>&gt;</span>Are you learning CSS?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/attr/startwith.png" alt="startwith"></p><h2 id="특정-단어로-끝나는-attribute-속성-선택"><a href="#특정-단어로-끝나는-attribute-속성-선택" class="headerlink" title="특정 단어로 끝나는 attribute 속성 선택"></a>특정 단어로 끝나는 attribute 속성 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class$=<span class="string">&quot;test&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="특정-값을-포함하는-attribute-속성을-선택"><a href="#특정-값을-포함하는-attribute-속성을-선택" class="headerlink" title="특정 값을 포함하는 attribute 속성을 선택"></a>특정 값을 포함하는 attribute 속성을 선택</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[class*=<span class="string">&quot;te&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;attribute&quot;&gt;&lt;a href=&quot;#attribute&quot; class=&quot;headerlink&quot; title=&quot;[attribute]&quot;&gt;&lt;/a&gt;[attribute]&lt;/h1&gt;&lt;p&gt;특정 attribute를 선택하기 위해 사용하는 선택자이다.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="attributeSelector" scheme="https://loco9939.github.io/tags/attributeSelector/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 16일차&gt; Image Sprites</title>
    <link href="https://loco9939.github.io/2023/03/08/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-16%EC%9D%BC%EC%B0%A8-Image-Sprites/"/>
    <id>https://loco9939.github.io/2023/03/08/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-16%EC%9D%BC%EC%B0%A8-Image-Sprites/</id>
    <published>2023-03-08T14:03:56.000Z</published>
    <updated>2023-03-08T14:12:58.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image-sprites"><a href="#image-sprites" class="headerlink" title="image sprites"></a>image sprites</h1><p>이미지 스프라이트는 단일 이미지에 포함된 이미지 모음이다.</p><p>이미지가 많은 웹 페이지 로드하는데 많은 시간이 걸릴 수 있고 서버 요청도 여러번 발생할 수 있다.</p><p>이미지 스프라이트를 사용하면 서버 요청 수가 줄어들고 대역폭이 줄어든다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>3개의 이미지를 사용하는 대신, 하나의 이미지를 사용한다.</p><p>그리고 나서 CSS로 보여주고 싶은 부분만 보여준다.</p><p><img src="/../../images/CSS/imagesprites/img_navsprites.gif" alt="imageSprites"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;home&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;next&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img_trans.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>src 속성은 비워둘 수 없기 때문에 투명한 이미지를 넣어두었다.</li><li>보여주고 싶은 이미지의 부분을 width, height로 정의했다.</li><li>background 속성으로 배경이미지를 불러오고 left, top 속성으로 배치한다.</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#home</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img_navsprites.gif</span>) <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#next</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">43px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img_navsprites.gif</span>) -<span class="number">91px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../../images/CSS/imagesprites/homenext.png" alt="homeNext"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image-sprites&quot;&gt;&lt;a href=&quot;#image-sprites&quot; class=&quot;headerlink&quot; title=&quot;image sprites&quot;&gt;&lt;/a&gt;image sprites&lt;/h1&gt;&lt;p&gt;이미지 스프라이트는 단일 이미지에 포함된 이미지</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="imageSprites" scheme="https://loco9939.github.io/tags/imageSprites/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 15일차&gt; Dropdown</title>
    <link href="https://loco9939.github.io/2023/03/07/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-15%EC%9D%BC%EC%B0%A8-Dropdown/"/>
    <id>https://loco9939.github.io/2023/03/07/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-15%EC%9D%BC%EC%B0%A8-Dropdown/</id>
    <published>2023-03-07T14:53:11.000Z</published>
    <updated>2023-03-07T15:06:31.689Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dropdown"><a href="#Dropdown" class="headerlink" title="Dropdown"></a>Dropdown</h1><p>CSS만을 이용하여 dropdown을 구현해보자.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-width</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>Mouse over me<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>우선 dropdown content를 열기 위한 span, button 요소를 사용한다.</p></li><li><p>dropdown content는 div같은 컨테이너 요소를 사용한다.</p></li><li><p>dropdown content를 CSS에 정확하게 배치하기 위해 1,2번을 div로 감싼다.</p></li><li><p>wrapper div에는 <code>position:relative </code>속성을 주어 기준이 되도록 하며 dropdown content에는 <code>position:absolute</code> 속성을 주어 dropdown button 바로 아래에 위치하도록 한다.</p></li><li><p>dropdown content는 hidden 속성이 기본값이다. 그리고 hover시 아래에 보이도록 한다. 그리고 min-width 속성을 줘서 width를 갖게 한다.</p></li></ol><blockquote><p>이때, dropdown button 만큼 넓게 width를 갖게 하고 싶다면 <code>width:100%</code>로 설정해라. 작은 화면에서 스크롤을 활성화 시키려면 <code>overflow:auto</code>를 설정하라.</p></blockquote><ol start="6"><li><p>border를 설정하는 것 대신 box-shadow 속성으로 카드처럼 보이게 할 수 있다.</p></li><li><p>hover 속성은 dropdown menu를 보여줄 때 사용된다.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dropdown&quot;&gt;&lt;a href=&quot;#Dropdown&quot; class=&quot;headerlink&quot; title=&quot;Dropdown&quot;&gt;&lt;/a&gt;Dropdown&lt;/h1&gt;&lt;p&gt;CSS만을 이용하여 dropdown을 구현해보자.&lt;/p&gt;
&lt;figure class=</summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="Dropdown" scheme="https://loco9939.github.io/tags/Dropdown/"/>
    
  </entry>
  
  <entry>
    <title>Docker, Container</title>
    <link href="https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EB%8F%84%EC%BB%A4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/"/>
    <id>https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%EB%8F%84%EC%BB%A4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</id>
    <published>2023-03-07T14:17:45.000Z</published>
    <updated>2023-03-07T14:51:41.756Z</updated>
    
    <content type="html"><![CDATA[<p>앞서 IaaS와 PaaS의 장점만 결합시킨 것이 도커이다. IaaS의 이식성과 PaaS의 운영비 장점을 갖춘 도커에 대해 알아보자.</p><p>서사를 위해서 전통적인 배포는 어떠했을지 살펴보자.</p><p><img src="/../../../images/CS/docker/deploy.png" alt="deploy"></p><h2 id="전통적-배포"><a href="#전통적-배포" class="headerlink" title="전통적 배포"></a>전통적 배포</h2><p>물리적 컴퓨터 한 대에 하나의 OS를 깔고 여러 프로그램을 설치하는 방식이었다. 이 때, 어떤 프로그램 설치하게되면 다른 앱에 영향을 미친다.</p><p>예를 들어, 예전에 보안 앱을 깔았더니 인터넷이나 어떤 애플리케이션이 제대로 동작하지 않았던 경험이 있다.</p><h2 id="가상화-배포"><a href="#가상화-배포" class="headerlink" title="가상화 배포"></a>가상화 배포</h2><p>전통적 배포에서 발전이 되어 가상머신을 기반으로 배포하는 가상화 배포가 등장하였다.</p><p>Hypervisor는 하나의 시스템상에서 가상 컴퓨터 여러 개를 구동할 수 있도록 중간계층 역할을 한다.</p><p>결과적으로 컴퓨터 한 대로 여러 앱을 독립적으로 실행하여 다른 앱에 영향을 끼치지 않는다.</p><p>단, OS도 독립적이기 때문에 비용이 많이든다.</p><blockquote><p>가상머신: 컴퓨터 모든 부품을(HardWare) 소프트웨어적으로 구현한 것</p></blockquote><h2 id="컨테이너-배포"><a href="#컨테이너-배포" class="headerlink" title="컨테이너 배포"></a>컨테이너 배포</h2><p><img src="/../../../images/CS/docker/container.png" alt="container"></p><p><strong>컨테이너는 코드와 모든 종속성(Node.js, 라이브러리 등)을 패키징하는 소프트웨어 표준 단위이다.</strong></p><p>컨테이너는 VM(Virtual Machine)과 유사하지만, 운영체재(OS)만 공유하고 애플리케이션은 독립적 컴퓨터로 구분되어 있다.</p><p>때문에 애플리케이션끼리 영향을 미치지 않고 비용도 가상화 배포보다 저렴하고 빠르다.</p><blockquote><p>다만 OS는 공유하기 때문에 애플리케이션의 문제가 OS에 영향을 미치면 구동 중인 전체 컨테이너에 문제가 될 수 있다.</p></blockquote><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>그래서 도커는 앞서 설명한 컨테이너라는 단위로 애플리케이션을 실행하는 기능을 제공하는 플랫폼이다.</p><p>여러 컴퓨터 간에 공유된 규격으로 리소스를 공유할 수 있어 유지보수성이 좋다.</p><p>또한 IaaS의 이식성과 PaaS의 운영비 장점을 갖추었다.</p><blockquote><p>기존의 종속성 라이브러리나 파일 등 기존 시스템에 대한 설치 절차를 Dockerfile 스크립트에 작성하고 배포 관련 사항을 도커스웜이나 쿠버네티스에 맞춰 작성해주기만 하면 된다. 그래서 보통 도커 + 쿠버네티스 또는 도커 + 도커 스웜으로 구축된다.</p></blockquote><h2 id="Docker-컨테이너-빌드-과정"><a href="#Docker-컨테이너-빌드-과정" class="headerlink" title="Docker 컨테이너 빌드 과정"></a>Docker 컨테이너 빌드 과정</h2><p><img src="/../../../images/CS/docker/docker.png" alt="docker"></p><ol><li>도커파일이 빌드</li><li>도커 이미지 생성 및 실행</li><li>도커 컨테이너 실행</li></ol><ul><li>도커파일(Dockerfile): 컨테이너에 설치해야하는 패키지, 환경 변수설정 등을 기록한 하나의 파일</li><li>도커이미지: 도커가 도커파일의 단계에 따라 컴퓨터의 상태를 “스냅샷”으로 저장한 것</li><li>컨테이너: 도커가 이미지를 불러와 실행할 때 생성되며, 실행중인 컨테이너는 이미지에 지정된 프로그램과 데이터를 사용해 일반적인 실제 컴퓨터와 연결되어 사용가능</li></ul><h3 id="Docker는-IaaS인가-PaaS인가"><a href="#Docker는-IaaS인가-PaaS인가" class="headerlink" title="Docker는 IaaS인가? PaaS인가?"></a>Docker는 IaaS인가? PaaS인가?</h3><p>엄밀히 말하면 둘 다 아니고 “클라우드 가상화기술”이지만 굳이 따지면 PaaS의 일부라고 보면된다.</p><p>컨테이너의 가상화는 가상 머신의 가상화가 일어나는 곳에서 한 추상화 계층 높은 곳에서 일어난다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;앞서 IaaS와 PaaS의 장점만 결합시킨 것이 도커이다. IaaS의 이식성과 PaaS의 운영비 장점을 갖춘 도커에 대해 알아보자.&lt;/p&gt;
&lt;p&gt;서사를 위해서 전통적인 배포는 어떠했을지 살펴보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../../../</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
    <category term="Docker" scheme="https://loco9939.github.io/tags/Docker/"/>
    
    <category term="Container" scheme="https://loco9939.github.io/tags/Container/"/>
    
  </entry>
  
  <entry>
    <title>클라우드, SaaS, IaaS, Paas</title>
    <link href="https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-SaaS-IaaS-Paas/"/>
    <id>https://loco9939.github.io/2023/03/07/CS/%EA%B8%B0%EC%B4%88%20%EA%B0%9C%EB%B0%9C%20%EC%A7%80%EC%8B%9D/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-SaaS-IaaS-Paas/</id>
    <published>2023-03-07T13:42:58.000Z</published>
    <updated>2023-03-07T14:18:08.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="클라우드"><a href="#클라우드" class="headerlink" title="클라우드"></a>클라우드</h1><p>클라우드란, 인터넷을 통해 접근할 수 있는 서버와 그 안에서 구동되는 소프트웨어, DB를 의미한다.</p><p>직접적으로 컴퓨터 장비를 구매하지 않고 온라인에 분산되어 존재하는 데이터 센터(클라우드)에게 작업을 맡겨 수행하는 것이다.</p><p>이를 <strong>오프프레미스(off-premise)방식</strong>이라고 한다.</p><p>반면 기업이나 개인이 자체 시설을 보유하고 직접 유지관리하는 데이터 센터(IDC)fmf 온프레미스(on-premise)방식이라고 한다.</p><h2 id="장점"><a href="#장점" class="headerlink" title="장점"></a>장점</h2><ul><li>서버컴퓨터, 네트워크, 방화벽, 전력 등에 대한 고려를 하지 않고 서비스 운영에만 집중할 수 있다.</li></ul><h2 id="SaaS-Software-as-a-Service"><a href="#SaaS-Software-as-a-Service" class="headerlink" title="SaaS(Software as a Service)"></a>SaaS(Software as a Service)</h2><p>인터넷을 통해 소프트웨어(완제품)을 제공하는 방법이다. 구글 드라이브, N드라이브, 구글 DOCS 등.</p><p>예를 들어, 구글 DOCS처럼 다른 컴퓨터에서도 쉽게 작업을 하며 다른사람과 실시간 공유작업도 가능하다.</p><h2 id="IaaS-Infrastructure-as-a-Service"><a href="#IaaS-Infrastructure-as-a-Service" class="headerlink" title="IaaS(Infrastructure as a Service)"></a>IaaS(Infrastructure as a Service)</h2><p>인터넷을 통해 인프라를 제공(서버와 저장소)한다. 빈 방을 준다고 생각하면 된다.</p><p>특정 클라우드에 종속되지 않는 대신 운영비가 상승한다. 또한 이식성이 좋다.</p><p>ex) AWS의 EC2, NCP 등이 있다.</p><h2 id="PaaS-Platform-as-a-Service"><a href="#PaaS-Platform-as-a-Service" class="headerlink" title="PaaS(Platform as a Service)"></a>PaaS(Platform as a Service)</h2><p>인터넷을 통해 플랫폼을 제공한다. 빌트인 방을 제공한다. 운영비 절감할 수 있고 모니터링, CI&#x2F;CD 제공된다.</p><p>하지만, 하나의 서버에 여러가지 서비스를 설치할 수 없어서 IaaS보다는 유연하지 않고 플랫폼에 종속된다.</p><p>ex) heroku: 자유롭게 클릭 몇번으로 여러가지 서비스 설치 가능</p><h3 id="PaaS-vs-IaaS"><a href="#PaaS-vs-IaaS" class="headerlink" title="PaaS vs IaaS"></a>PaaS vs IaaS</h3><h4 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h4><ul><li>유연하지 않고 플랫폼에 종속된다.</li><li>설치가 쉽다.</li><li>이식성이 낮다.<ul><li>각 서비스가 각자의 서버에서 동작하고 각각의 서버를 따로 연결해줘야하기 때문에…</li></ul></li><li>운영비 효율 좋다.</li></ul><h4 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h4><ul><li>유연하고 플랫폼에 종속되지 않는다.</li><li>설치가 어렵다.</li><li>이식성이 높다.<ul><li>반면 IaaS는 빈 방(서버)를 그대로 이식하면 되기에 이식성이 높다.</li></ul></li><li>운영비 효율 낮다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;클라우드&quot;&gt;&lt;a href=&quot;#클라우드&quot; class=&quot;headerlink&quot; title=&quot;클라우드&quot;&gt;&lt;/a&gt;클라우드&lt;/h1&gt;&lt;p&gt;클라우드란, 인터넷을 통해 접근할 수 있는 서버와 그 안에서 구동되는 소프트웨어, DB를 의미한다.&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="CS" scheme="https://loco9939.github.io/categories/CS/"/>
    
    <category term="기초 개발 지식" scheme="https://loco9939.github.io/categories/CS/%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%B0%9C-%EC%A7%80%EC%8B%9D/"/>
    
    
    <category term="클라우드" scheme="https://loco9939.github.io/tags/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C/"/>
    
    <category term="SaaS" scheme="https://loco9939.github.io/tags/SaaS/"/>
    
    <category term="IaaS" scheme="https://loco9939.github.io/tags/IaaS/"/>
    
    <category term="PaaS" scheme="https://loco9939.github.io/tags/PaaS/"/>
    
  </entry>
  
  <entry>
    <title>&lt;오늘부터 CSS 마스터 14일차&gt; Navigation Bar</title>
    <link href="https://loco9939.github.io/2023/03/06/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-14%EC%9D%BC%EC%B0%A8-Navigation-Bar/"/>
    <id>https://loco9939.github.io/2023/03/06/CSS/%EC%98%A4%EB%8A%98%EB%B6%80%ED%84%B0-CSS-%EB%A7%88%EC%8A%A4%ED%84%B0-14%EC%9D%BC%EC%B0%A8-Navigation-Bar/</id>
    <published>2023-03-06T12:58:26.000Z</published>
    <updated>2023-03-06T13:50:42.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Navigation-Bar"><a href="#Navigation-Bar" class="headerlink" title="Navigation Bar"></a>Navigation Bar</h1><p>Navigation Bar는 link의 목록들이다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;default.asp&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;news.asp&quot;</span>&gt;</span>News<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;contact.asp&quot;</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;about.asp&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>기본적인 list 스타일을 제거하기 위한 CSS는 다음과 같다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="수직-Navigation-Bar"><a href="#수직-Navigation-Bar" class="headerlink" title="수직 Navigation Bar"></a>수직 Navigation Bar</h2><h3 id="1-li-요소-내부의-a태그에-display-block-선언하기"><a href="#1-li-요소-내부의-a태그에-display-block-선언하기" class="headerlink" title="1. li 요소 내부의 a태그에 display:block 선언하기"></a>1. li 요소 내부의 a태그에 display:block 선언하기</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Change the link color on hover */</span></span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>추가로 active 클래스를 추가하여 현재 선택된 link를 표시해줄 수 있다. JavaScript 사용해야한다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#04aa6d</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* .active 클래스는 포함하지 않는 a태그 hover시 효과 */</span></span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.active</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-고정된-세로-Navigation-Bar"><a href="#2-고정된-세로-Navigation-Bar" class="headerlink" title="2. 고정된 세로 Navigation Bar"></a>2. 고정된 세로 Navigation Bar</h3><p>sticky side 네비게이션 바를 만드는 방법이다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>; <span class="comment">/* Full height */</span></span><br><span class="line">  <span class="attribute">position</span>: fixed; <span class="comment">/* Make it stick, even on scroll */</span></span><br><span class="line">  <span class="attribute">overflow</span>: auto; <span class="comment">/* Enable scrolling if the sidenav has too much content */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="수평-Navigation-Bar"><a href="#수평-Navigation-Bar" class="headerlink" title="수평 Navigation Bar"></a>수평 Navigation Bar</h2><h3 id="1-li-요소를-display-inline-속성을-준다"><a href="#1-li-요소를-display-inline-속성을-준다" class="headerlink" title="1. li 요소를 display:inline 속성을 준다."></a>1. li 요소를 display:inline 속성을 준다.</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-floating-li"><a href="#2-floating-li" class="headerlink" title="2. floating li"></a>2. floating li</h3><p><img src="/../../images/CSS/navbar/float.png" alt="float"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#dddddd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-상단-고정된-Navigation-Bar"><a href="#3-상단-고정된-Navigation-Bar" class="headerlink" title="3. 상단 고정된 Navigation Bar"></a>3. 상단 고정된 Navigation Bar</h3><p><img src="/../../images/CSS/navbar/fixed.png" alt="fixedTop"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-sticky-Navigation-Bar"><a href="#4-sticky-Navigation-Bar" class="headerlink" title="4. sticky Navigation Bar"></a>4. sticky Navigation Bar</h3><p><img src="/../../images/CSS/navbar/sticky.png" alt="sticky"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: -webkit-sticky; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>IE는 sticky를 지원하지 않는다. Safari는 -webkit- prefix가 필요하다. 또한 top, right, left, bottom 중 적어도 하나는 지정해줘야한다.</p></blockquote><h2 id="CSS만으로-Dropdown-Navigation-Bar-구현하기"><a href="#CSS만으로-Dropdown-Navigation-Bar-구현하기" class="headerlink" title="CSS만으로 Dropdown Navigation Bar 구현하기"></a>CSS만으로 Dropdown Navigation Bar 구현하기</h2><p><img src="/../../images/CSS/navbar/dropdown.png" alt="dropdown"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#home&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#news&quot;</span>&gt;</span>News<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropbtn&quot;</span>&gt;</span>Dropdown<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Dropdown Menu inside a Navigation Bar<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hover over the &quot;Dropdown&quot; link to see the dropdown menu.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#38444d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.dropbtn</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropbtn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.dropdown</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dropdown-content</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">160px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>dropdown-content는 기본 display 속성이 none이다.</li><li>dropdown 클래스가 있는 li에 hover 했을 때, dropdown-content에 display 속성은 block으로 바꿔주었다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Navigation-Bar&quot;&gt;&lt;a href=&quot;#Navigation-Bar&quot; class=&quot;headerlink&quot; title=&quot;Navigation Bar&quot;&gt;&lt;/a&gt;Navigation Bar&lt;/h1&gt;&lt;p&gt;Navigation Bar는 link의 </summary>
      
    
    
    
    <category term="CSS" scheme="https://loco9939.github.io/categories/CSS/"/>
    
    
    <category term="Navigation" scheme="https://loco9939.github.io/tags/Navigation/"/>
    
  </entry>
  
  <entry>
    <title>tagged templates</title>
    <link href="https://loco9939.github.io/2023/03/03/JavaScript/tagged-templates/"/>
    <id>https://loco9939.github.io/2023/03/03/JavaScript/tagged-templates/</id>
    <published>2023-03-03T02:47:12.000Z</published>
    <updated>2023-03-03T02:47:55.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="📌-template-literals"><a href="#📌-template-literals" class="headerlink" title="📌 template literals"></a>📌 template literals</h1><p>템플릿 리터럴은 내장된 표현식을 허용하는 문자열 리터럴이다.</p><h2 id="특징"><a href="#특징" class="headerlink" title="특징"></a>특징</h2><ul><li>&#96; 백틱이라는 기호를 사용한다.</li><li>${}를 사용하여 표현식을 삽입할 수 있다.</li><li>개행을 포함한다.</li></ul><h2 id="tagged-templates"><a href="#tagged-templates" class="headerlink" title="tagged templates"></a>tagged templates</h2><p>템플릿 리터럴의 발전된 형태로 태그드 템플릿이 있다.</p><p>마치 함수처럼 사용할 수 있다.</p><h2 id="예제-1"><a href="#예제-1" class="headerlink" title="예제 1"></a>예제 1</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> virtualNode = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;figure&quot;</span>,</span><br><span class="line">  <span class="attr">className</span>: <span class="string">&quot;tagged-template-literals&quot;</span>,</span><br><span class="line">  <span class="attr">style</span>: &#123; <span class="attr">cssText</span>: <span class="string">&quot;&quot;</span> &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">styled</span> = (<span class="params">strings, Node, ...value</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> el = strings</span><br><span class="line">    .<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">    .<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> acc + cur.<span class="title function_">trim</span>(), <span class="string">&quot;&quot;</span>)</span><br><span class="line">    .<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  el.<span class="title function_">forEach</span>(<span class="function">(<span class="params">elem, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Node</span>.<span class="property">style</span>.<span class="property">cssText</span> += elem + value[i] + <span class="string">&quot;;&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Node</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> values = &#123;</span><br><span class="line">  <span class="attr">margin</span>: <span class="string">&quot;10px&quot;</span>,</span><br><span class="line">  <span class="attr">color</span>: <span class="string">&quot;#d08471&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> received = styled<span class="string">`<span class="subst">$&#123;virtualNode&#125;</span>margin: <span class="subst">$&#123;values.margin&#125;</span>;color: <span class="subst">$&#123;values.color&#125;</span>;`</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(received);</span><br></pre></td></tr></table></figure><ul><li>마치 함수처럼 인수를 받아서 템플릿 리터럴에 넣어 반환값을 원하는 대로 지정해줄 수 있다.</li><li>리액트의 StyledComponent가 태그드 템플릿을 활용하여 탄생하게 되었다.</li></ul><h1 id="🏓-소감"><a href="#🏓-소감" class="headerlink" title="🏓 소감"></a>🏓 소감</h1><p>문자타입과 다른 타입을 파라미터로 사용하는 함수를 만들 때 원하는 반환값을 직관적으로 사용할 수 있어 용이해보인다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;📌-template-literals&quot;&gt;&lt;a href=&quot;#📌-template-literals&quot; class=&quot;headerlink&quot; title=&quot;📌 template literals&quot;&gt;&lt;/a&gt;📌 template literals&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://loco9939.github.io/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>this</title>
    <link href="https://loco9939.github.io/2023/03/03/JavaScript/this/"/>
    <id>https://loco9939.github.io/2023/03/03/JavaScript/this/</id>
    <published>2023-03-03T02:47:01.000Z</published>
    <updated>2023-03-03T02:47:35.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="this-키워드"><a href="#this-키워드" class="headerlink" title="this 키워드"></a>this 키워드</h1><p>메서드로 프로퍼티를 참조하고 변경하기 위해서는 우선 자신이 속한 객체를 가리키는 식별자를 참조해야만 가능한 일이다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> circle = &#123;</span><br><span class="line">  <span class="comment">// 프로퍼티: 객체 고유의 상태 데이터</span></span><br><span class="line">  <span class="attr">radius</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="comment">// 메서드: 상태 데이터를 참조하고 조작하는 동작</span></span><br><span class="line">  <span class="title function_">getDiameter</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 이 메서드가 자신이 속한 객체의 프로퍼티나 다른 메서드를 참조하려면</span></span><br><span class="line">    <span class="comment">// 자신이 속한 객체인 circle을 참조할 수 있어야 한다.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * circle.<span class="property">radius</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(circle.<span class="title function_">getDiameter</span>()); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><ul><li>객체 리터럴은 circle 변수에 할당되기 직전에 평가된다?<br>&#x3D; 할당 연산자에 의해서 피연산자를 할당해주기 위해서는 우측의 객체 리터럴이 평가된 값으로 존재해야 할당을 해줄 수 있기 때문이다.</li></ul><p>하지만 위처럼 재귀적으로 자신이 속한 객체를 참조하는 것은 바람직하지 않다.</p><p>그 예시를 생성자 함수를 통해 설명해보자</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 생성자 함수</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Circle</span>(<span class="params">radius</span>) &#123;</span><br><span class="line">  <span class="comment">// 이 시점에는 생성자 함수 자신이 생성할 인스턴스를 가리키는 식별자를 알 수 없다.</span></span><br><span class="line">  ????.<span class="property">radius</span> = radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Circle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getDiameter</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 이 시점에는 생성자 함수 자신이 생성할 인스턴스를 가리키는 식별자를 알 수 없다.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span> * ????.<span class="property">radius</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 생성자 함수로 인스턴스를 생성하려면 먼저 생성자 함수를 정의해야 한다.</span></span><br><span class="line"><span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><ul><li>생성자 함수 내부에서 프로퍼티나 메서드를 추가하기 위해서는 자신이 생성할 인스턴스를 참조할 수 있어야 하는데, 인스턴스를 생성하려면 생성자 함수가 존재해야한다.</li></ul><p>따라서 자신이 속한 객체, 자신이 생성할 인스턴스를 가리킬 <strong>특별한 식별자가 필요하다.</strong></p><p><strong>this란, 자신이 속한 객체 또는 자신이 생성할 인스턴스를 가리키는 자기 참조 변수이다. this를 통해 자신이 속한 객체나 자신이 생성할 인스턴스의 프로퍼티나 메서드를 참조할 수 있다.</strong></p><ul><li>this는 코드 어디서든 참조할 수 있다. (전역에서도 가능)</li></ul><aside>💡 단, this가 가리키는 값(this 바인딩)은 함수 호출 방식에 의해 동적으로 결정된다.</aside><p>this는 객체의 프로퍼티나 메소드를 참조하기 위한 자기 참조 변수이므로 객체의 메서드 내부 또는 생성자 함수 내부에서만 의미가 있다. 따라서 strict mode가 선언된 일반 함수 내부의 this는 undefined가 바인딩된다. (일반함수에선 필요 없다)</p><h1 id="함수-호출방식과-this-바인딩"><a href="#함수-호출방식과-this-바인딩" class="headerlink" title="함수 호출방식과 this 바인딩"></a>함수 호출방식과 this 바인딩</h1><p><strong>this에 바인딩될 값은 함수 호출 방식에 의해 동적으로 결정된다.</strong></p><h2 id="1-일반-함수-호출"><a href="#1-일반-함수-호출" class="headerlink" title="1. 일반 함수 호출"></a>1. 일반 함수 호출</h2><p>전역 객체에 바인딩된다.</p><p>중첩 함수 또한 일반 함수로 호출 시 함수 내부의 this는 전역 객체에 바인딩 된다.</p><p>매서드 내에서 정의된 중첩함수도 일반 함수로 호출되면 역시 전역 객체에 바인딩 된다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var 키워드로 선언한 전역 변수 value는 전역 객체의 프로퍼티다.</span></span><br><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// const 키워드로 선언한 전역 변수 value는 전역 객체의 프로퍼티가 아니다.</span></span><br><span class="line"><span class="comment">// const value = 1;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="number">100</span>,</span><br><span class="line">  <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo&#x27;s this: &quot;</span>, <span class="variable language_">this</span>); <span class="comment">// &#123;value: 100, foo: ƒ&#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo&#x27;s this.value: &quot;</span>, <span class="variable language_">this</span>.<span class="property">value</span>); <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 메서드 내에서 정의한 중첩 함수</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bar&#x27;s this: &quot;</span>, <span class="variable language_">this</span>); <span class="comment">// window</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bar&#x27;s this.value: &quot;</span>, <span class="variable language_">this</span>.<span class="property">value</span>); <span class="comment">// 1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 메서드 내에서 정의한 중첩 함수도 일반 함수로 호출되면 중첩 함수 내부의 this에는 전역 객체가 바인딩된다.</span></span><br><span class="line">    <span class="title function_">bar</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>();</span><br></pre></td></tr></table></figure><p>콜백함수가 일반함수로 호출된다면 콜백함수 내부의 this에도 전역객체가 바인딩된다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="number">100</span>,</span><br><span class="line">  <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo&#x27;s this: &quot;</span>, <span class="variable language_">this</span>); <span class="comment">// &#123;value: 100, foo: ƒ&#125;</span></span><br><span class="line">    <span class="comment">// 콜백 함수 내부의 this에는 전역 객체가 바인딩된다.</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;callback&#x27;s this: &quot;</span>, <span class="variable language_">this</span>); <span class="comment">// window</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;callback&#x27;s this.value: &quot;</span>, <span class="variable language_">this</span>.<span class="property">value</span>); <span class="comment">// 1</span></span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>();</span><br></pre></td></tr></table></figure><p>하지만 메서드 내의 중첩함수와 콜백함수는 외부함수를 돕는 헬퍼 함수의 역할을 하는데 <strong>외부함수인 메서드와 중첩함수 또는 콜백함수의 this가 일치하지 않는다</strong>는 것은 중첩함수 또는 콜백함수가 헬퍼 함수로 동작하는 것을 어렵게 만든다.</p><h3 id="화살표함수-내부에서-this"><a href="#화살표함수-내부에서-this" class="headerlink" title="화살표함수 내부에서 this"></a>화살표함수 내부에서 this</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="number">100</span>,</span><br><span class="line">  <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 화살표 함수 내부의 this는 상위 스코프의 this를 가리킨다.</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">value</span>), <span class="number">100</span>); <span class="comment">// 100</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>();</span><br></pre></td></tr></table></figure><h2 id="2-메서드-호출"><a href="#2-메서드-호출" class="headerlink" title="2. 메서드 호출"></a>2. 메서드 호출</h2><p>메서드 내부의 this는 메서드를 소유한 객체가 아닌 <span style="color:red">메서드를 호출한 객체에 바인딩</span>된다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Lee&quot;</span>,</span><br><span class="line">  <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 메서드 내부의 this는 메서드를 호출한 객체에 바인딩된다.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Kim&quot;</span>,</span><br><span class="line">  <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="title function_">getName</span>()); <span class="comment">// Lee</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(people.<span class="title function_">getName</span>()); <span class="comment">// Kim</span></span><br></pre></td></tr></table></figure><ul><li>person 객체의 getName 프로퍼티가 가리키는 함수 객체는 person 객체에 포함된 것이 아니라 독립적으로 존재하는 별도의 객체이다? 내 생각에는 this가 가리키는 것이 메서드를 소유한 객체라고 생각해도 맞지 않나?<br>person 객체에 getName 프로퍼티 키가 가리키는 함수 객체를 소유하고 있는 것이 아니라 참조값을 가지므로 독립적으로 존재하는 객체를 가리키고 있는 것이 맞다.</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> anotherPerson = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Kim&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// getName 메서드를 anotherPerson 객체의 메서드로 할당</span></span><br><span class="line">anotherPerson.<span class="property">getName</span> = person.<span class="property">getName</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getName 메서드를 호출한 객체는 anotherPerson이다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(anotherPerson.<span class="title function_">getName</span>()); <span class="comment">// Kim</span></span><br></pre></td></tr></table></figure><ul><li>새로운 객체의 프로퍼티에 person.getName 프로퍼티를 할당해줄 수 있다.</li></ul><p>this는 getName 메서드를 호출한 객체에 바인딩된다.</p><p>프로토타입 메서드 내부에서도 마찬가지로 바인딩된다.</p><h2 id="3-생성자-함수-호출"><a href="#3-생성자-함수-호출" class="headerlink" title="3. 생성자 함수 호출"></a>3. 생성자 함수 호출</h2><p>생성자 함수 내부의 this에는 생성자 함수가 (미래에) 생성할 인스턴스가 바인딩 된다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 생성자 함수</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Circle</span>(<span class="params">radius</span>) &#123;</span><br><span class="line">  <span class="comment">// 생성자 함수 내부의 this는 생성자 함수가 생성할 인스턴스를 가리킨다.</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">getDiameter</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * <span class="variable language_">this</span>.<span class="property">radius</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 반지름이 5인 Circle 객체를 생성</span></span><br><span class="line"><span class="keyword">const</span> circle1 = <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">5</span>);</span><br><span class="line"><span class="comment">// 반지름이 10인 Circle 객체를 생성</span></span><br><span class="line"><span class="keyword">const</span> circle2 = <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(circle1.<span class="title function_">getDiameter</span>()); <span class="comment">// 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(circle2.<span class="title function_">getDiameter</span>()); <span class="comment">// 20</span></span><br></pre></td></tr></table></figure><h2 id="4-Function-prototype-apply-x2F-call-x2F-bind-메서드에-의한-간접-호출"><a href="#4-Function-prototype-apply-x2F-call-x2F-bind-메서드에-의한-간접-호출" class="headerlink" title="4. Function.prototype.apply&#x2F;call&#x2F;bind 메서드에 의한 간접 호출"></a>4. Function.prototype.apply&#x2F;call&#x2F;bind 메서드에 의한 간접 호출</h2><p>apply, call, bind 메서드는 Function.prototype의 메서드이다. 이들 메서드는 <strong>모든 함수가 상속받아 사용 가능하다.</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getThisBinding</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this로 사용할 객체</span></span><br><span class="line"><span class="keyword">const</span> thisArg = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getThisBinding</span>()); <span class="comment">// window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// getThisBinding 함수를 호출하면서 인수로 전달한 객체를 getThisBinding 함수의 this에 바인딩한다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">apply</span>(thisArg)); <span class="comment">// &#123;a: 1&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">call</span>(thisArg)); <span class="comment">// &#123;a: 1&#125;</span></span><br></pre></td></tr></table></figure><p>call,apply 메서드는 함수를 호출하면서 첫번째 인수로 전달한 객체를 호출한 함수의 this에 바인딩한다.</p><ul><li>위 예제에서는 getThisBinding() 함수에 인수를 전달해주지 않는다.</li><li><strong>call, apply의 반환값은 호출한 함수의 반환값이다.</strong></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getThisBinding</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this로 사용할 객체</span></span><br><span class="line"><span class="keyword">const</span> thisArg = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getThisBinding 함수를 호출하면서 인수로 전달한 객체를 getThisBinding 함수의 this에 바인딩한다.</span></span><br><span class="line"><span class="comment">// apply 메서드는 호출할 함수의 인수를 배열로 묶어 전달한다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">apply</span>(thisArg, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br><span class="line"><span class="comment">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line"><span class="comment">// &#123;a: 1&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// call 메서드는 호출할 함수의 인수를 쉼표로 구분한 리스트 형식으로 전달한다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">call</span>(thisArg, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line"><span class="comment">// &#123;a: 1&#125;</span></span><br></pre></td></tr></table></figure><p>call,apply 메서드로 함수를 호출하면서 호출한 함수에 인수를 전달해줄 수 있다.</p><h3 id="유사배열-객체에-배열-메서드-사용"><a href="#유사배열-객체에-배열-메서드-사용" class="headerlink" title="유사배열 객체에 배열 메서드 사용"></a>유사배열 객체에 배열 메서드 사용</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">convertArgsToArray</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// arguments 객체를 배열로 변환</span></span><br><span class="line">  <span class="comment">// Array.prototype.slice를 인수없이 호출하면 배열의 복사본을 생성한다.</span></span><br><span class="line">  <span class="keyword">const</span> arr = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">  <span class="comment">// const arr = Array.prototype.slice.apply(arguments);</span></span><br><span class="line">  <span class="comment">// const arr = Array.from(arguments)</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">convertArgsToArray</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>); <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><ul><li>arguments 객체는 배열이 아니므로 배열 메서드를 사용할 수 없지만 apply, call 메서드를 사용하면 가능하다.</li></ul><blockquote><p>새로 나온 Array.from() 정적 메서드를 사용할 수 있다. 하지만 arguments 객체를 잘 안쓴다.</p></blockquote><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getThisBinding</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this로 사용할 객체</span></span><br><span class="line"><span class="keyword">const</span> thisArg = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bind 메서드는 첫 번째 인수로 전달한 thisArg로 this 바인딩이 교체된</span></span><br><span class="line"><span class="comment">// getThisBinding 함수를 새롭게 생성해 반환한다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">bind</span>(thisArg)); <span class="comment">// getThisBinding</span></span><br><span class="line"><span class="comment">// bind 메서드는 함수를 호출하지는 않으므로 명시적으로 호출해야 한다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getThisBinding.<span class="title function_">bind</span>(thisArg)()); <span class="comment">// &#123;a: 1&#125;</span></span><br></pre></td></tr></table></figure><ul><li>bind 메서드는 함수를 호출하지 않고 인수로 전달받은 객체로 this 바인딩이 교체된 함수를 새롭게 생성하여 반환한다.</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Lee&quot;</span>,</span><br><span class="line">  <span class="title function_">foo</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="comment">// ①</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(callback, <span class="number">100</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">person.<span class="title function_">foo</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hi! my name is <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>.`</span>); <span class="comment">// ② Hi! my name is .</span></span><br><span class="line">  <span class="comment">// 일반 함수로 호출된 콜백 함수 내부의 this.name은 브라우저 환경에서 window.name과 같다.</span></span><br><span class="line">  <span class="comment">// 브라우저 환경에서 window.name은 브라우저 창의 이름을 나타내는 빌트인 프로퍼티이며 기본값은 &#x27;&#x27;이다.</span></span><br><span class="line">  <span class="comment">// Node.js 환경에서 this.name은 undefined다.</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>person.foo의 콜백함수가 호출되기 전 1의 시점에서 this는 foo 메서드를 호출한 객체(person)를 가리킨다.</li><li>그러나 person.foo의 콜백함수가 일반 함수로서 호출된 2의 시점에서 this는 전역객체 windows를 가리킨다.</li><li>person.foo의 콜백함수는 헬퍼함수로 person.foo를 돕는 역할을 하기 때문에 서로의 this가 같아야한다.</li></ul><p>이 때, bind 메서드를 사용하여 this를 일치시킨다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Lee&quot;</span>,</span><br><span class="line">  <span class="title function_">foo</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="comment">// bind 메서드로 callback 함수 내부의 this 바인딩을 전달</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(callback.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="number">100</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">person.<span class="title function_">foo</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hi! my name is <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>.`</span>); <span class="comment">// Hi! my name is Lee.</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>callback 함수에 this가 바인딩된 새로운 함수를 반환</li></ul><p><strong>코드해설</strong></p><p>즉, foo안의 this는 person 객체를가리키는데, 콜백함수 호출하면 this가 window를 가리킨다. 그러므로 bind함수를 사용하여 foo 메서드가 가리키는 this를 callback 함수에 바인딩해줘서 콜백함수가 가리키는 this와 일치 시켜준다.</p><blockquote><p>bind, call, apply, that으로 this 바인딩을 일치 시켜주는 것 보다 화살표 함수를 사용하는 것이 간편하다. 하지만 여러 가지 방식에 대해서도 알아두자.</p></blockquote><table><thead><tr><th>함수 호출 방식</th><th>this 바인딩</th></tr></thead><tbody><tr><td>일반 함수 호출</td><td>전역 객체</td></tr><tr><td>메서드 호출</td><td>메서드를 호출한 객체</td></tr><tr><td>생성자 함수 호출</td><td>생성자 함수가 (미래에) 생성할 인스턴스</td></tr><tr><td>Function.prototype.apply&#x2F;call&#x2F;bind 메서드에 의한 간접호출</td><td>Function.prototype.apply&#x2F;call&#x2F;bind 메서드에 첫번째로 전달한 객체</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;this-키워드&quot;&gt;&lt;a href=&quot;#this-키워드&quot; class=&quot;headerlink&quot; title=&quot;this 키워드&quot;&gt;&lt;/a&gt;this 키워드&lt;/h1&gt;&lt;p&gt;메서드로 프로퍼티를 참조하고 변경하기 위해서는 우선 자신이 속한 객체를 가리키는 식</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://loco9939.github.io/categories/JavaScript/"/>
    
    
  </entry>
  
</feed>
